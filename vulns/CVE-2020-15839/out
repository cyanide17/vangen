sizeof(op_log) : 20
writel(0x4380000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
writel(0x21, bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);

writel(0x25, bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
DMA_alloc(0x1dea2000, 0x1000);
DMA_alloc(0x1de3c000, 0x2000);
res = readl(bar_addr[0]+0x18);

writel(0x10400000, bar_addr[0]+0x18);
writel(0x20, bar_addr[0]+0x1000);
res = readl(bar_addr[0]+0x1000);
res = readl(bar_addr[0]+0x0);

writel(0x18140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0x8);

writel(0xffffffff, bar_addr[0]+0xd8);
writel(0x0, bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x400);

writel(0x0, bar_addr[0]+0x400);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x0);

writel(0x1c140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x10);

writel(0xffffffff, bar_addr[0]+0xd8);
res = readl(bar_addr[0]+0xc0);
res = readl(bar_addr[0]+0x18);

writel(0x10400000, bar_addr[0]+0x18);
writel(0x0, bar_addr[0]+0x5800);
res = readl(bar_addr[0]+0x3828);

writel(0x1410000, bar_addr[0]+0x3828);
res = readl(bar_addr[0]+0x3928);

writel(0x400000, bar_addr[0]+0x3928);
res = readl(bar_addr[0]+0x3840);

writel(0x4000403, bar_addr[0]+0x3840);
res = readl(bar_addr[0]+0x3940);
res = readl(bar_addr[0]+0x0);

writel(0x18140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0x18);

writel(0x10400000, bar_addr[0]+0x18);
res = readl(bar_addr[0]+0x5b00);

writel(0xec00200, bar_addr[0]+0x5b00);
res = readl(bar_addr[0]+0x5b64);

writel(0x1, bar_addr[0]+0x5b64);
writel(0x11, bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0xe00);

writel(0x0, bar_addr[0]+0x5600);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5604);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5608);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x560c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5610);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5614);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5618);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x561c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5620);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5624);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5628);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x562c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5630);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5634);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5638);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x563c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5640);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5644);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5648);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x564c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5650);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5654);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5658);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x565c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5660);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5664);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5668);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x566c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5670);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5674);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5678);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x567c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5680);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5684);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5688);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x568c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5690);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5694);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5698);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x569c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56a0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56a4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56a8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56ac);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56b0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56b4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56b8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56bc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56c0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56c4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56c8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56cc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56d0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56d4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56d8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56dc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56e0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56e4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56e8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56ec);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56f0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56f4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56f8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x56fc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5700);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5704);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5708);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x570c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5710);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5714);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5718);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x571c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5720);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5724);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5728);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x572c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5730);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5734);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5738);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x573c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5740);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5744);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5748);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x574c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5750);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5754);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5758);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x575c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5760);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5764);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5768);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x576c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5770);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5774);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5778);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x577c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5780);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5784);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5788);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x578c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5790);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5794);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5798);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x579c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57a0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57a4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57a8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57ac);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57b0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57b4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57b8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57bc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57c0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57c4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57c8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57cc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57d0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57d4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57d8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57dc);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57e0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57e4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57e8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57ec);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57f0);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57f4);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57f8);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x57fc);
res = readl(bar_addr[0]+0x8);

writel(0x12005452, bar_addr[0]+0x5400);
res = readl(bar_addr[0]+0x8);

writel(0x80005634, bar_addr[0]+0x5404);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5408);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x540c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5410);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5414);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5418);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x541c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5420);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5424);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5428);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x542c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5430);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5434);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5438);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x543c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5440);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5444);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5448);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x544c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5450);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5454);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5458);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x545c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5460);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5464);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5468);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x546c);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5470);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5474);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x5200);
writel(0x0, bar_addr[0]+0x5204);
writel(0x0, bar_addr[0]+0x5208);
writel(0x0, bar_addr[0]+0x520c);
writel(0x0, bar_addr[0]+0x5210);
writel(0x0, bar_addr[0]+0x5214);
writel(0x0, bar_addr[0]+0x5218);
writel(0x0, bar_addr[0]+0x521c);
writel(0x0, bar_addr[0]+0x5220);
writel(0x0, bar_addr[0]+0x5224);
writel(0x0, bar_addr[0]+0x5228);
writel(0x0, bar_addr[0]+0x522c);
writel(0x0, bar_addr[0]+0x5230);
writel(0x0, bar_addr[0]+0x5234);
writel(0x0, bar_addr[0]+0x5238);
writel(0x0, bar_addr[0]+0x523c);
writel(0x0, bar_addr[0]+0x5240);
writel(0x0, bar_addr[0]+0x5244);
writel(0x0, bar_addr[0]+0x5248);
writel(0x0, bar_addr[0]+0x524c);
writel(0x0, bar_addr[0]+0x5250);
writel(0x0, bar_addr[0]+0x5254);
writel(0x0, bar_addr[0]+0x5258);
writel(0x0, bar_addr[0]+0x525c);
writel(0x0, bar_addr[0]+0x5260);
writel(0x0, bar_addr[0]+0x5264);
writel(0x0, bar_addr[0]+0x5268);
writel(0x0, bar_addr[0]+0x526c);
writel(0x0, bar_addr[0]+0x5270);
writel(0x0, bar_addr[0]+0x5274);
writel(0x0, bar_addr[0]+0x5278);
writel(0x0, bar_addr[0]+0x527c);
writel(0x0, bar_addr[0]+0x5280);
writel(0x0, bar_addr[0]+0x5284);
writel(0x0, bar_addr[0]+0x5288);
writel(0x0, bar_addr[0]+0x528c);
writel(0x0, bar_addr[0]+0x5290);
writel(0x0, bar_addr[0]+0x5294);
writel(0x0, bar_addr[0]+0x5298);
writel(0x0, bar_addr[0]+0x529c);
writel(0x0, bar_addr[0]+0x52a0);
writel(0x0, bar_addr[0]+0x52a4);
writel(0x0, bar_addr[0]+0x52a8);
writel(0x0, bar_addr[0]+0x52ac);
writel(0x0, bar_addr[0]+0x52b0);
writel(0x0, bar_addr[0]+0x52b4);
writel(0x0, bar_addr[0]+0x52b8);
writel(0x0, bar_addr[0]+0x52bc);
writel(0x0, bar_addr[0]+0x52c0);
writel(0x0, bar_addr[0]+0x52c4);
writel(0x0, bar_addr[0]+0x52c8);
writel(0x0, bar_addr[0]+0x52cc);
writel(0x0, bar_addr[0]+0x52d0);
writel(0x0, bar_addr[0]+0x52d4);
writel(0x0, bar_addr[0]+0x52d8);
writel(0x0, bar_addr[0]+0x52dc);
writel(0x0, bar_addr[0]+0x52e0);
writel(0x0, bar_addr[0]+0x52e4);
writel(0x0, bar_addr[0]+0x52e8);
writel(0x0, bar_addr[0]+0x52ec);
writel(0x0, bar_addr[0]+0x52f0);
writel(0x0, bar_addr[0]+0x52f4);
writel(0x0, bar_addr[0]+0x52f8);
writel(0x0, bar_addr[0]+0x52fc);
writel(0x0, bar_addr[0]+0x5300);
writel(0x0, bar_addr[0]+0x5304);
writel(0x0, bar_addr[0]+0x5308);
writel(0x0, bar_addr[0]+0x530c);
writel(0x0, bar_addr[0]+0x5310);
writel(0x0, bar_addr[0]+0x5314);
writel(0x0, bar_addr[0]+0x5318);
writel(0x0, bar_addr[0]+0x531c);
writel(0x0, bar_addr[0]+0x5320);
writel(0x0, bar_addr[0]+0x5324);
writel(0x0, bar_addr[0]+0x5328);
writel(0x0, bar_addr[0]+0x532c);
writel(0x0, bar_addr[0]+0x5330);
writel(0x0, bar_addr[0]+0x5334);
writel(0x0, bar_addr[0]+0x5338);
writel(0x0, bar_addr[0]+0x533c);
writel(0x0, bar_addr[0]+0x5340);
writel(0x0, bar_addr[0]+0x5344);
writel(0x0, bar_addr[0]+0x5348);
writel(0x0, bar_addr[0]+0x534c);
writel(0x0, bar_addr[0]+0x5350);
writel(0x0, bar_addr[0]+0x5354);
writel(0x0, bar_addr[0]+0x5358);
writel(0x0, bar_addr[0]+0x535c);
writel(0x0, bar_addr[0]+0x5360);
writel(0x0, bar_addr[0]+0x5364);
writel(0x0, bar_addr[0]+0x5368);
writel(0x0, bar_addr[0]+0x536c);
writel(0x0, bar_addr[0]+0x5370);
writel(0x0, bar_addr[0]+0x5374);
writel(0x0, bar_addr[0]+0x5378);
writel(0x0, bar_addr[0]+0x537c);
writel(0x0, bar_addr[0]+0x5380);
writel(0x0, bar_addr[0]+0x5384);
writel(0x0, bar_addr[0]+0x5388);
writel(0x0, bar_addr[0]+0x538c);
writel(0x0, bar_addr[0]+0x5390);
writel(0x0, bar_addr[0]+0x5394);
writel(0x0, bar_addr[0]+0x5398);
writel(0x0, bar_addr[0]+0x539c);
writel(0x0, bar_addr[0]+0x53a0);
writel(0x0, bar_addr[0]+0x53a4);
writel(0x0, bar_addr[0]+0x53a8);
writel(0x0, bar_addr[0]+0x53ac);
writel(0x0, bar_addr[0]+0x53b0);
writel(0x0, bar_addr[0]+0x53b4);
writel(0x0, bar_addr[0]+0x53b8);
writel(0x0, bar_addr[0]+0x53bc);
writel(0x0, bar_addr[0]+0x53c0);
writel(0x0, bar_addr[0]+0x53c4);
writel(0x0, bar_addr[0]+0x53c8);
writel(0x0, bar_addr[0]+0x53cc);
writel(0x0, bar_addr[0]+0x53d0);
writel(0x0, bar_addr[0]+0x53d4);
writel(0x0, bar_addr[0]+0x53d8);
writel(0x0, bar_addr[0]+0x53dc);
writel(0x0, bar_addr[0]+0x53e0);
writel(0x0, bar_addr[0]+0x53e4);
writel(0x0, bar_addr[0]+0x53e8);
writel(0x0, bar_addr[0]+0x53ec);
writel(0x0, bar_addr[0]+0x53f0);
writel(0x0, bar_addr[0]+0x53f4);
writel(0x0, bar_addr[0]+0x53f8);
writel(0x0, bar_addr[0]+0x53fc);
res = readl(bar_addr[0]+0x5820);
res = readl(bar_addr[0]+0x0);

writel(0x18140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8300000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x4303360, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4209940, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x4303b60, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x43d0003, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x43e0000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4209940, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8240000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8290000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4240de1, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4290e00, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4201b40, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
writel(0x8808, bar_addr[0]+0x30);
writel(0x100, bar_addr[0]+0x2c);
writel(0xc28001, bar_addr[0]+0x28);
writel(0x680, bar_addr[0]+0x170);
writel(0x80007328, bar_addr[0]+0x2160);
writel(0x7330, bar_addr[0]+0x2168);
res = readl(bar_addr[0]+0x3828);

writel(0x1410000, bar_addr[0]+0x3828);
res = readl(bar_addr[0]+0x5b00);

writel(0xec00200, bar_addr[0]+0x5b00);
res = readl(bar_addr[0]+0x4000);
res = readl(bar_addr[0]+0x4008);
res = readl(bar_addr[0]+0x4010);
res = readl(bar_addr[0]+0x4014);
res = readl(bar_addr[0]+0x4018);
res = readl(bar_addr[0]+0x401c);
res = readl(bar_addr[0]+0x4020);
res = readl(bar_addr[0]+0x4028);
res = readl(bar_addr[0]+0x4030);
res = readl(bar_addr[0]+0x4038);
res = readl(bar_addr[0]+0x4040);
res = readl(bar_addr[0]+0x4048);
res = readl(bar_addr[0]+0x404c);
res = readl(bar_addr[0]+0x4050);
res = readl(bar_addr[0]+0x4054);
res = readl(bar_addr[0]+0x4058);
res = readl(bar_addr[0]+0x4074);
res = readl(bar_addr[0]+0x4078);
res = readl(bar_addr[0]+0x407c);
res = readl(bar_addr[0]+0x4080);
res = readl(bar_addr[0]+0x4088);
res = readl(bar_addr[0]+0x408c);
res = readl(bar_addr[0]+0x4090);
res = readl(bar_addr[0]+0x4094);
res = readl(bar_addr[0]+0x40a0);
res = readl(bar_addr[0]+0x40a4);
res = readl(bar_addr[0]+0x40a8);
res = readl(bar_addr[0]+0x40ac);
res = readl(bar_addr[0]+0x40b0);
res = readl(bar_addr[0]+0x40c0);
res = readl(bar_addr[0]+0x40c4);
res = readl(bar_addr[0]+0x40c8);
res = readl(bar_addr[0]+0x40cc);
res = readl(bar_addr[0]+0x40d0);
res = readl(bar_addr[0]+0x40d4);
res = readl(bar_addr[0]+0x40f0);
res = readl(bar_addr[0]+0x40f4);
res = readl(bar_addr[0]+0x405c);
res = readl(bar_addr[0]+0x4060);
res = readl(bar_addr[0]+0x4064);
res = readl(bar_addr[0]+0x4068);
res = readl(bar_addr[0]+0x406c);
res = readl(bar_addr[0]+0x4070);
res = readl(bar_addr[0]+0x40d8);
res = readl(bar_addr[0]+0x40dc);
res = readl(bar_addr[0]+0x40e0);
res = readl(bar_addr[0]+0x40e4);
res = readl(bar_addr[0]+0x40e8);
res = readl(bar_addr[0]+0x40ec);
res = readl(bar_addr[0]+0x4004);
res = readl(bar_addr[0]+0x400c);
res = readl(bar_addr[0]+0x4034);
res = readl(bar_addr[0]+0x403c);
res = readl(bar_addr[0]+0x40f8);
res = readl(bar_addr[0]+0x40fc);
res = readl(bar_addr[0]+0x40b4);
res = readl(bar_addr[0]+0x40b8);
res = readl(bar_addr[0]+0x40bc);
res = readl(bar_addr[0]+0x4100);
res = readl(bar_addr[0]+0x4124);
res = readl(bar_addr[0]+0x4104);
res = readl(bar_addr[0]+0x4108);
res = readl(bar_addr[0]+0x410c);
res = readl(bar_addr[0]+0x4110);
res = readl(bar_addr[0]+0x4118);
res = readl(bar_addr[0]+0x411c);
res = readl(bar_addr[0]+0x4120);

writel(0x8100, bar_addr[0]+0x38);
writel(0x0, bar_addr[0]+0x458);
writel(0x1a00000, bar_addr[0]+0xb608);
res = readl(bar_addr[0]+0xb600);
res = readl(bar_addr[0]+0xb604);
res = readl(bar_addr[0]+0xb608);
res = readl(bar_addr[0]+0xb600);
res = readl(bar_addr[0]+0xb604);
res = readl(bar_addr[0]+0xb614);

writel(0x0, bar_addr[0]+0xb614);
res = readl(bar_addr[0]+0xb614);
res = readl(bar_addr[0]+0xb620);

writel(0x0, bar_addr[0]+0xb620);
res = readl(bar_addr[0]+0xb620);

writel(0x0, bar_addr[0]+0xb634);
writel(0x0, bar_addr[0]+0xb638);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0xb628);
res = readl(bar_addr[0]+0xb61c);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8390000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x4390000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4201140, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x5820);
res = readl(bar_addr[0]+0x0);

writel(0x18140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8300000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x4303360, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4209140, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x4303b60, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x43d0003, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x43e0000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4209140, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8240000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8290000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4240de1, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4290e00, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4201340, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
writel(0x8808, bar_addr[0]+0x30);
writel(0x100, bar_addr[0]+0x2c);
writel(0xc28001, bar_addr[0]+0x28);
writel(0x680, bar_addr[0]+0x170);
writel(0x80007328, bar_addr[0]+0x2160);
writel(0x7330, bar_addr[0]+0x2168);
res = readl(bar_addr[0]+0x100);

writel(0x0, bar_addr[0]+0x53fc);
writel(0x0, bar_addr[0]+0x53f8);
writel(0x0, bar_addr[0]+0x53f4);
writel(0x0, bar_addr[0]+0x53f0);
writel(0x0, bar_addr[0]+0x53ec);
writel(0x0, bar_addr[0]+0x53e8);
writel(0x0, bar_addr[0]+0x53e4);
writel(0x0, bar_addr[0]+0x53e0);
writel(0x0, bar_addr[0]+0x53dc);
writel(0x0, bar_addr[0]+0x53d8);
writel(0x0, bar_addr[0]+0x53d4);
writel(0x0, bar_addr[0]+0x53d0);
writel(0x0, bar_addr[0]+0x53cc);
writel(0x0, bar_addr[0]+0x53c8);
writel(0x0, bar_addr[0]+0x53c4);
writel(0x0, bar_addr[0]+0x53c0);
writel(0x0, bar_addr[0]+0x53bc);
writel(0x0, bar_addr[0]+0x53b8);
writel(0x0, bar_addr[0]+0x53b4);
writel(0x0, bar_addr[0]+0x53b0);
writel(0x0, bar_addr[0]+0x53ac);
writel(0x0, bar_addr[0]+0x53a8);
writel(0x0, bar_addr[0]+0x53a4);
writel(0x0, bar_addr[0]+0x53a0);
writel(0x0, bar_addr[0]+0x539c);
writel(0x0, bar_addr[0]+0x5398);
writel(0x0, bar_addr[0]+0x5394);
writel(0x0, bar_addr[0]+0x5390);
writel(0x0, bar_addr[0]+0x538c);
writel(0x0, bar_addr[0]+0x5388);
writel(0x0, bar_addr[0]+0x5384);
writel(0x0, bar_addr[0]+0x5380);
writel(0x0, bar_addr[0]+0x537c);
writel(0x0, bar_addr[0]+0x5378);
writel(0x0, bar_addr[0]+0x5374);
writel(0x0, bar_addr[0]+0x5370);
writel(0x0, bar_addr[0]+0x536c);
writel(0x0, bar_addr[0]+0x5368);
writel(0x0, bar_addr[0]+0x5364);
writel(0x0, bar_addr[0]+0x5360);
writel(0x0, bar_addr[0]+0x535c);
writel(0x0, bar_addr[0]+0x5358);
writel(0x0, bar_addr[0]+0x5354);
writel(0x0, bar_addr[0]+0x5350);
writel(0x0, bar_addr[0]+0x534c);
writel(0x0, bar_addr[0]+0x5348);
writel(0x0, bar_addr[0]+0x5344);
writel(0x0, bar_addr[0]+0x5340);
writel(0x0, bar_addr[0]+0x533c);
writel(0x0, bar_addr[0]+0x5338);
writel(0x0, bar_addr[0]+0x5334);
writel(0x0, bar_addr[0]+0x5330);
writel(0x0, bar_addr[0]+0x532c);
writel(0x0, bar_addr[0]+0x5328);
writel(0x0, bar_addr[0]+0x5324);
writel(0x0, bar_addr[0]+0x5320);
writel(0x0, bar_addr[0]+0x531c);
writel(0x0, bar_addr[0]+0x5318);
writel(0x0, bar_addr[0]+0x5314);
writel(0x0, bar_addr[0]+0x5310);
writel(0x0, bar_addr[0]+0x530c);
writel(0x0, bar_addr[0]+0x5308);
writel(0x0, bar_addr[0]+0x5304);
writel(0x0, bar_addr[0]+0x5300);
writel(0x0, bar_addr[0]+0x52fc);
writel(0x0, bar_addr[0]+0x52f8);
writel(0x0, bar_addr[0]+0x52f4);
writel(0x0, bar_addr[0]+0x52f0);
writel(0x0, bar_addr[0]+0x52ec);
writel(0x0, bar_addr[0]+0x52e8);
writel(0x0, bar_addr[0]+0x52e4);
writel(0x0, bar_addr[0]+0x52e0);
writel(0x0, bar_addr[0]+0x52dc);
writel(0x0, bar_addr[0]+0x52d8);
writel(0x0, bar_addr[0]+0x52d4);
writel(0x0, bar_addr[0]+0x52d0);
writel(0x0, bar_addr[0]+0x52cc);
writel(0x0, bar_addr[0]+0x52c8);
writel(0x0, bar_addr[0]+0x52c4);
writel(0x0, bar_addr[0]+0x52c0);
writel(0x0, bar_addr[0]+0x52bc);
writel(0x0, bar_addr[0]+0x52b8);
writel(0x0, bar_addr[0]+0x52b4);
writel(0x0, bar_addr[0]+0x52b0);
writel(0x0, bar_addr[0]+0x52ac);
writel(0x0, bar_addr[0]+0x52a8);
writel(0x0, bar_addr[0]+0x52a4);
writel(0x0, bar_addr[0]+0x52a0);
writel(0x0, bar_addr[0]+0x529c);
writel(0x0, bar_addr[0]+0x5298);
writel(0x0, bar_addr[0]+0x5294);
writel(0x0, bar_addr[0]+0x5290);
writel(0x0, bar_addr[0]+0x528c);
writel(0x0, bar_addr[0]+0x5288);
writel(0x0, bar_addr[0]+0x5284);
writel(0x0, bar_addr[0]+0x5280);
writel(0x0, bar_addr[0]+0x527c);
writel(0x0, bar_addr[0]+0x5278);
writel(0x0, bar_addr[0]+0x5274);
writel(0x0, bar_addr[0]+0x5270);
writel(0x0, bar_addr[0]+0x526c);
writel(0x0, bar_addr[0]+0x5268);
writel(0x0, bar_addr[0]+0x5264);
writel(0x0, bar_addr[0]+0x5260);
writel(0x0, bar_addr[0]+0x525c);
writel(0x0, bar_addr[0]+0x5258);
writel(0x0, bar_addr[0]+0x5254);
writel(0x0, bar_addr[0]+0x5250);
writel(0x0, bar_addr[0]+0x524c);
writel(0x0, bar_addr[0]+0x5248);
writel(0x0, bar_addr[0]+0x5244);
writel(0x0, bar_addr[0]+0x5240);
writel(0x0, bar_addr[0]+0x523c);
writel(0x0, bar_addr[0]+0x5238);
writel(0x0, bar_addr[0]+0x5234);
writel(0x0, bar_addr[0]+0x5230);
writel(0x0, bar_addr[0]+0x522c);
writel(0x0, bar_addr[0]+0x5228);
writel(0x0, bar_addr[0]+0x5224);
writel(0x0, bar_addr[0]+0x5220);
writel(0x0, bar_addr[0]+0x521c);
writel(0x0, bar_addr[0]+0x5218);
writel(0x0, bar_addr[0]+0x5214);
writel(0x0, bar_addr[0]+0x5210);
writel(0x0, bar_addr[0]+0x520c);
writel(0x0, bar_addr[0]+0x5208);
writel(0x0, bar_addr[0]+0x5204);
writel(0x10000, bar_addr[0]+0x5200);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x100);

writel(0x40000, bar_addr[0]+0x100);
writel(0x0, bar_addr[0]+0x5474);
writel(0x0, bar_addr[0]+0x5470);
writel(0x0, bar_addr[0]+0x546c);
writel(0x0, bar_addr[0]+0x5468);
writel(0x0, bar_addr[0]+0x5464);
writel(0x0, bar_addr[0]+0x5460);
writel(0x0, bar_addr[0]+0x545c);
writel(0x0, bar_addr[0]+0x5458);
writel(0x0, bar_addr[0]+0x5454);
writel(0x0, bar_addr[0]+0x5450);
writel(0x0, bar_addr[0]+0x544c);
writel(0x0, bar_addr[0]+0x5448);
writel(0x0, bar_addr[0]+0x5444);
writel(0x0, bar_addr[0]+0x5440);
writel(0x0, bar_addr[0]+0x543c);
writel(0x0, bar_addr[0]+0x5438);
writel(0x0, bar_addr[0]+0x5434);
writel(0x0, bar_addr[0]+0x5430);
writel(0x0, bar_addr[0]+0x542c);
writel(0x0, bar_addr[0]+0x5428);
writel(0x0, bar_addr[0]+0x5424);
writel(0x0, bar_addr[0]+0x5420);
writel(0x0, bar_addr[0]+0x541c);
writel(0x0, bar_addr[0]+0x5418);
writel(0x0, bar_addr[0]+0x5414);
writel(0x0, bar_addr[0]+0x5410);
writel(0x0, bar_addr[0]+0x540c);
writel(0x0, bar_addr[0]+0x5408);
res = readl(bar_addr[0]+0x8);

writel(0x0, bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x0);

writel(0x58140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0x5600);

writel(0x1, bar_addr[0]+0x5600);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x5600);

writel(0x1, bar_addr[0]+0x5600);
res = readl(bar_addr[0]+0x8);

writel(0x1dea2000, bar_addr[0]+0x3800);
writel(0x0, bar_addr[0]+0x3804);
writel(0x1000, bar_addr[0]+0x3808);
writel(0x0, bar_addr[0]+0x3810);
writel(0x0, bar_addr[0]+0x3818);
writel(0x0, bar_addr[0]+0x3810);
writel(0x0, bar_addr[0]+0x3818);
writel(0x8, bar_addr[0]+0x3820);
writel(0x20, bar_addr[0]+0x382c);
res = readl(bar_addr[0]+0x3828);

writel(0x141011f, bar_addr[0]+0x3828);
res = readl(bar_addr[0]+0x3828);

writel(0x141011f, bar_addr[0]+0x3928);
res = readl(bar_addr[0]+0x400);

writel(0x10000f8, bar_addr[0]+0x400);
res = readl(bar_addr[0]+0x400);

writel(0x103f0f8, bar_addr[0]+0x400);
res = readl(bar_addr[0]+0x8);

writel(0xb028ebe2, bar_addr[0]+0x5c80);
writel(0xa85f3951, bar_addr[0]+0x5c84);
writel(0x1d61e42d, bar_addr[0]+0x5c88);
writel(0x661e0ab, bar_addr[0]+0x5c8c);
writel(0x5542ca31, bar_addr[0]+0x5c90);
writel(0xa1cd6213, bar_addr[0]+0x5c94);
writel(0xf31fd576, bar_addr[0]+0x5c98);
writel(0x71cfc95a, bar_addr[0]+0x5c9c);
writel(0xd394d0cb, bar_addr[0]+0x5ca0);
writel(0xf22e4b83, bar_addr[0]+0x5ca4);
writel(0x0, bar_addr[0]+0x5c00);
writel(0x0, bar_addr[0]+0x5c04);
writel(0x0, bar_addr[0]+0x5c08);
writel(0x0, bar_addr[0]+0x5c0c);
writel(0x0, bar_addr[0]+0x5c10);
writel(0x0, bar_addr[0]+0x5c14);
writel(0x0, bar_addr[0]+0x5c18);
writel(0x0, bar_addr[0]+0x5c1c);
writel(0x0, bar_addr[0]+0x5c20);
writel(0x0, bar_addr[0]+0x5c24);
writel(0x0, bar_addr[0]+0x5c28);
writel(0x0, bar_addr[0]+0x5c2c);
writel(0x0, bar_addr[0]+0x5c30);
writel(0x0, bar_addr[0]+0x5c34);
writel(0x0, bar_addr[0]+0x5c38);
writel(0x0, bar_addr[0]+0x5c3c);
writel(0x0, bar_addr[0]+0x5c40);
writel(0x0, bar_addr[0]+0x5c44);
writel(0x0, bar_addr[0]+0x5c48);
writel(0x0, bar_addr[0]+0x5c4c);
writel(0x0, bar_addr[0]+0x5c50);
writel(0x0, bar_addr[0]+0x5c54);
writel(0x0, bar_addr[0]+0x5c58);
writel(0x0, bar_addr[0]+0x5c5c);
writel(0x0, bar_addr[0]+0x5c60);
writel(0x0, bar_addr[0]+0x5c64);
writel(0x0, bar_addr[0]+0x5c68);
writel(0x0, bar_addr[0]+0x5c6c);
writel(0x0, bar_addr[0]+0x5c70);
writel(0x0, bar_addr[0]+0x5c74);
writel(0x0, bar_addr[0]+0x5c78);
writel(0x0, bar_addr[0]+0x5c7c);
res = readl(bar_addr[0]+0x5000);

writel(0x2300, bar_addr[0]+0x5000);
writel(0x370000, bar_addr[0]+0x5818);
res = readl(bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x5008);

writel(0x8000, bar_addr[0]+0x5008);
writel(0x4008002, bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x8);

writel(0x1040420, bar_addr[0]+0x2828);
writel(0x1040420, bar_addr[0]+0x2928);
writel(0x20, bar_addr[0]+0x2820);
writel(0x20, bar_addr[0]+0x282c);
writel(0xc3, bar_addr[0]+0xe8);
writel(0xc3, bar_addr[0]+0xec);
writel(0xc3, bar_addr[0]+0xf0);
res = readl(bar_addr[0]+0x18);

writel(0xffffffff, bar_addr[0]+0xe0);
writel(0x18400000, bar_addr[0]+0x18);
res = readl(bar_addr[0]+0x8);

writel(0x1de3c000, bar_addr[0]+0x2800);
writel(0x0, bar_addr[0]+0x2804);
writel(0x1000, bar_addr[0]+0x2808);
writel(0x0, bar_addr[0]+0x2810);
writel(0x0, bar_addr[0]+0x2818);
writel(0x0, bar_addr[0]+0x2810);
writel(0x0, bar_addr[0]+0x2818);
res = readl(bar_addr[0]+0x5000);

writel(0x2300, bar_addr[0]+0x5000);
writel(0x4008002, bar_addr[0]+0x100);
DMA_alloc(0x1dc23840, 0x5f2);
dma_writel(0x1dc23840, P2V(0x1de3c000));
dma_writel(0x0, P2V(0x1de3c004));
writel(0x0, bar_addr[0]+0x2818);
DMA_alloc(0x1dc23040, 0x5f2);
dma_writel(0x1dc23040, P2V(0x1de3c010));
dma_writel(0x0, P2V(0x1de3c014));
DMA_alloc(0x1dff8040, 0x5f2);
dma_writel(0x1dff8040, P2V(0x1de3c020));
dma_writel(0x0, P2V(0x1de3c024));
DMA_alloc(0x1dff8840, 0x5f2);
dma_writel(0x1dff8840, P2V(0x1de3c030));
dma_writel(0x0, P2V(0x1de3c034));
DMA_alloc(0x1dff9040, 0x5f2);
dma_writel(0x1dff9040, P2V(0x1de3c040));
dma_writel(0x0, P2V(0x1de3c044));
DMA_alloc(0x1dff9840, 0x5f2);
dma_writel(0x1dff9840, P2V(0x1de3c050));
dma_writel(0x0, P2V(0x1de3c054));
DMA_alloc(0x1dffa040, 0x5f2);
dma_writel(0x1dffa040, P2V(0x1de3c060));
dma_writel(0x0, P2V(0x1de3c064));
DMA_alloc(0x1dffa840, 0x5f2);
dma_writel(0x1dffa840, P2V(0x1de3c070));
dma_writel(0x0, P2V(0x1de3c074));
DMA_alloc(0x1dffb040, 0x5f2);
dma_writel(0x1dffb040, P2V(0x1de3c080));
dma_writel(0x0, P2V(0x1de3c084));
DMA_alloc(0x1dffb840, 0x5f2);
dma_writel(0x1dffb840, P2V(0x1de3c090));
dma_writel(0x0, P2V(0x1de3c094));
DMA_alloc(0x1de84040, 0x5f2);
dma_writel(0x1de84040, P2V(0x1de3c0a0));
dma_writel(0x0, P2V(0x1de3c0a4));
DMA_alloc(0x1de84840, 0x5f2);
dma_writel(0x1de84840, P2V(0x1de3c0b0));
dma_writel(0x0, P2V(0x1de3c0b4));
DMA_alloc(0x1de85040, 0x5f2);
dma_writel(0x1de85040, P2V(0x1de3c0c0));
dma_writel(0x0, P2V(0x1de3c0c4));
DMA_alloc(0x1de85840, 0x5f2);
dma_writel(0x1de85840, P2V(0x1de3c0d0));
dma_writel(0x0, P2V(0x1de3c0d4));
DMA_alloc(0x1de86040, 0x5f2);
dma_writel(0x1de86040, P2V(0x1de3c0e0));
dma_writel(0x0, P2V(0x1de3c0e4));
DMA_alloc(0x1de86840, 0x5f2);
dma_writel(0x1de86840, P2V(0x1de3c0f0));
dma_writel(0x0, P2V(0x1de3c0f4));
DMA_alloc(0x1de87040, 0x5f2);
dma_writel(0x1de87040, P2V(0x1de3c100));
dma_writel(0x0, P2V(0x1de3c104));
writel(0x10, bar_addr[0]+0x2818);
DMA_alloc(0x1de87840, 0x5f2);
dma_writel(0x1de87840, P2V(0x1de3c110));
dma_writel(0x0, P2V(0x1de3c114));
DMA_alloc(0x1de70040, 0x5f2);
dma_writel(0x1de70040, P2V(0x1de3c120));
dma_writel(0x0, P2V(0x1de3c124));
DMA_alloc(0x1de70840, 0x5f2);
dma_writel(0x1de70840, P2V(0x1de3c130));
dma_writel(0x0, P2V(0x1de3c134));
DMA_alloc(0x1de71040, 0x5f2);
dma_writel(0x1de71040, P2V(0x1de3c140));
dma_writel(0x0, P2V(0x1de3c144));
DMA_alloc(0x1de71840, 0x5f2);
dma_writel(0x1de71840, P2V(0x1de3c150));
dma_writel(0x0, P2V(0x1de3c154));
DMA_alloc(0x1de72040, 0x5f2);
dma_writel(0x1de72040, P2V(0x1de3c160));
dma_writel(0x0, P2V(0x1de3c164));
DMA_alloc(0x1de72840, 0x5f2);
dma_writel(0x1de72840, P2V(0x1de3c170));
dma_writel(0x0, P2V(0x1de3c174));
DMA_alloc(0x1de73040, 0x5f2);
dma_writel(0x1de73040, P2V(0x1de3c180));
dma_writel(0x0, P2V(0x1de3c184));
DMA_alloc(0x1de73840, 0x5f2);
dma_writel(0x1de73840, P2V(0x1de3c190));
dma_writel(0x0, P2V(0x1de3c194));
DMA_alloc(0x1e4d0040, 0x5f2);
dma_writel(0x1e4d0040, P2V(0x1de3c1a0));
dma_writel(0x0, P2V(0x1de3c1a4));
DMA_alloc(0x1e4d0840, 0x5f2);
dma_writel(0x1e4d0840, P2V(0x1de3c1b0));
dma_writel(0x0, P2V(0x1de3c1b4));
DMA_alloc(0x1e4d1040, 0x5f2);
dma_writel(0x1e4d1040, P2V(0x1de3c1c0));
dma_writel(0x0, P2V(0x1de3c1c4));
DMA_alloc(0x1e4d1840, 0x5f2);
dma_writel(0x1e4d1840, P2V(0x1de3c1d0));
dma_writel(0x0, P2V(0x1de3c1d4));
DMA_alloc(0x1e4d2040, 0x5f2);
dma_writel(0x1e4d2040, P2V(0x1de3c1e0));
dma_writel(0x0, P2V(0x1de3c1e4));
DMA_alloc(0x1e4d2840, 0x5f2);
dma_writel(0x1e4d2840, P2V(0x1de3c1f0));
dma_writel(0x0, P2V(0x1de3c1f4));
DMA_alloc(0x1e4d3040, 0x5f2);
dma_writel(0x1e4d3040, P2V(0x1de3c200));
dma_writel(0x0, P2V(0x1de3c204));
writel(0x20, bar_addr[0]+0x2818);
DMA_alloc(0x1e4d3840, 0x5f2);
dma_writel(0x1e4d3840, P2V(0x1de3c210));
dma_writel(0x0, P2V(0x1de3c214));
DMA_alloc(0x1de44040, 0x5f2);
dma_writel(0x1de44040, P2V(0x1de3c220));
dma_writel(0x0, P2V(0x1de3c224));
DMA_alloc(0x1de44840, 0x5f2);
dma_writel(0x1de44840, P2V(0x1de3c230));
dma_writel(0x0, P2V(0x1de3c234));
DMA_alloc(0x1de45040, 0x5f2);
dma_writel(0x1de45040, P2V(0x1de3c240));
dma_writel(0x0, P2V(0x1de3c244));
DMA_alloc(0x1de45840, 0x5f2);
dma_writel(0x1de45840, P2V(0x1de3c250));
dma_writel(0x0, P2V(0x1de3c254));
DMA_alloc(0x1de46040, 0x5f2);
dma_writel(0x1de46040, P2V(0x1de3c260));
dma_writel(0x0, P2V(0x1de3c264));
DMA_alloc(0x1de46840, 0x5f2);
dma_writel(0x1de46840, P2V(0x1de3c270));
dma_writel(0x0, P2V(0x1de3c274));
DMA_alloc(0x1de47040, 0x5f2);
dma_writel(0x1de47040, P2V(0x1de3c280));
dma_writel(0x0, P2V(0x1de3c284));
DMA_alloc(0x1de47840, 0x5f2);
dma_writel(0x1de47840, P2V(0x1de3c290));
dma_writel(0x0, P2V(0x1de3c294));
DMA_alloc(0x1c480040, 0x5f2);
dma_writel(0x1c480040, P2V(0x1de3c2a0));
dma_writel(0x0, P2V(0x1de3c2a4));
DMA_alloc(0x1c480840, 0x5f2);
dma_writel(0x1c480840, P2V(0x1de3c2b0));
dma_writel(0x0, P2V(0x1de3c2b4));
DMA_alloc(0x1c481040, 0x5f2);
dma_writel(0x1c481040, P2V(0x1de3c2c0));
dma_writel(0x0, P2V(0x1de3c2c4));
DMA_alloc(0x1c481840, 0x5f2);
dma_writel(0x1c481840, P2V(0x1de3c2d0));
dma_writel(0x0, P2V(0x1de3c2d4));
DMA_alloc(0x1c482040, 0x5f2);
dma_writel(0x1c482040, P2V(0x1de3c2e0));
dma_writel(0x0, P2V(0x1de3c2e4));
DMA_alloc(0x1c482840, 0x5f2);
dma_writel(0x1c482840, P2V(0x1de3c2f0));
dma_writel(0x0, P2V(0x1de3c2f4));
DMA_alloc(0x1c483040, 0x5f2);
dma_writel(0x1c483040, P2V(0x1de3c300));
dma_writel(0x0, P2V(0x1de3c304));
writel(0x30, bar_addr[0]+0x2818);
DMA_alloc(0x1c483840, 0x5f2);
dma_writel(0x1c483840, P2V(0x1de3c310));
dma_writel(0x0, P2V(0x1de3c314));
DMA_alloc(0x1de68040, 0x5f2);
dma_writel(0x1de68040, P2V(0x1de3c320));
dma_writel(0x0, P2V(0x1de3c324));
DMA_alloc(0x1de68840, 0x5f2);
dma_writel(0x1de68840, P2V(0x1de3c330));
dma_writel(0x0, P2V(0x1de3c334));
DMA_alloc(0x1de69040, 0x5f2);
dma_writel(0x1de69040, P2V(0x1de3c340));
dma_writel(0x0, P2V(0x1de3c344));
DMA_alloc(0x1de69840, 0x5f2);
dma_writel(0x1de69840, P2V(0x1de3c350));
dma_writel(0x0, P2V(0x1de3c354));
DMA_alloc(0x1de6a040, 0x5f2);
dma_writel(0x1de6a040, P2V(0x1de3c360));
dma_writel(0x0, P2V(0x1de3c364));
DMA_alloc(0x1de6a840, 0x5f2);
dma_writel(0x1de6a840, P2V(0x1de3c370));
dma_writel(0x0, P2V(0x1de3c374));
DMA_alloc(0x1de6b040, 0x5f2);
dma_writel(0x1de6b040, P2V(0x1de3c380));
dma_writel(0x0, P2V(0x1de3c384));
DMA_alloc(0x1de6b840, 0x5f2);
dma_writel(0x1de6b840, P2V(0x1de3c390));
dma_writel(0x0, P2V(0x1de3c394));
DMA_alloc(0x1e4a8040, 0x5f2);
dma_writel(0x1e4a8040, P2V(0x1de3c3a0));
dma_writel(0x0, P2V(0x1de3c3a4));
DMA_alloc(0x1e4a8840, 0x5f2);
dma_writel(0x1e4a8840, P2V(0x1de3c3b0));
dma_writel(0x0, P2V(0x1de3c3b4));
DMA_alloc(0x1e4a9040, 0x5f2);
dma_writel(0x1e4a9040, P2V(0x1de3c3c0));
dma_writel(0x0, P2V(0x1de3c3c4));
DMA_alloc(0x1e4a9840, 0x5f2);
dma_writel(0x1e4a9840, P2V(0x1de3c3d0));
dma_writel(0x0, P2V(0x1de3c3d4));
DMA_alloc(0x1e4aa040, 0x5f2);
dma_writel(0x1e4aa040, P2V(0x1de3c3e0));
dma_writel(0x0, P2V(0x1de3c3e4));
DMA_alloc(0x1e4aa840, 0x5f2);
dma_writel(0x1e4aa840, P2V(0x1de3c3f0));
dma_writel(0x0, P2V(0x1de3c3f4));
DMA_alloc(0x1e4ab040, 0x5f2);
dma_writel(0x1e4ab040, P2V(0x1de3c400));
dma_writel(0x0, P2V(0x1de3c404));
writel(0x40, bar_addr[0]+0x2818);
DMA_alloc(0x1e4ab840, 0x5f2);
dma_writel(0x1e4ab840, P2V(0x1de3c410));
dma_writel(0x0, P2V(0x1de3c414));
DMA_alloc(0x1e4ac040, 0x5f2);
dma_writel(0x1e4ac040, P2V(0x1de3c420));
dma_writel(0x0, P2V(0x1de3c424));
DMA_alloc(0x1e4ac840, 0x5f2);
dma_writel(0x1e4ac840, P2V(0x1de3c430));
dma_writel(0x0, P2V(0x1de3c434));
DMA_alloc(0x1e4ad040, 0x5f2);
dma_writel(0x1e4ad040, P2V(0x1de3c440));
dma_writel(0x0, P2V(0x1de3c444));
DMA_alloc(0x1e4ad840, 0x5f2);
dma_writel(0x1e4ad840, P2V(0x1de3c450));
dma_writel(0x0, P2V(0x1de3c454));
DMA_alloc(0x1e4ae040, 0x5f2);
dma_writel(0x1e4ae040, P2V(0x1de3c460));
dma_writel(0x0, P2V(0x1de3c464));
DMA_alloc(0x1e4ae840, 0x5f2);
dma_writel(0x1e4ae840, P2V(0x1de3c470));
dma_writel(0x0, P2V(0x1de3c474));
DMA_alloc(0x1e4af040, 0x5f2);
dma_writel(0x1e4af040, P2V(0x1de3c480));
dma_writel(0x0, P2V(0x1de3c484));
DMA_alloc(0x1e4af840, 0x5f2);
dma_writel(0x1e4af840, P2V(0x1de3c490));
dma_writel(0x0, P2V(0x1de3c494));
DMA_alloc(0x1de60040, 0x5f2);
dma_writel(0x1de60040, P2V(0x1de3c4a0));
dma_writel(0x0, P2V(0x1de3c4a4));
DMA_alloc(0x1de60840, 0x5f2);
dma_writel(0x1de60840, P2V(0x1de3c4b0));
dma_writel(0x0, P2V(0x1de3c4b4));
DMA_alloc(0x1de61040, 0x5f2);
dma_writel(0x1de61040, P2V(0x1de3c4c0));
dma_writel(0x0, P2V(0x1de3c4c4));
DMA_alloc(0x1de61840, 0x5f2);
dma_writel(0x1de61840, P2V(0x1de3c4d0));
dma_writel(0x0, P2V(0x1de3c4d4));
DMA_alloc(0x1de62040, 0x5f2);
dma_writel(0x1de62040, P2V(0x1de3c4e0));
dma_writel(0x0, P2V(0x1de3c4e4));
DMA_alloc(0x1de62840, 0x5f2);
dma_writel(0x1de62840, P2V(0x1de3c4f0));
dma_writel(0x0, P2V(0x1de3c4f4));
DMA_alloc(0x1de63040, 0x5f2);
dma_writel(0x1de63040, P2V(0x1de3c500));
dma_writel(0x0, P2V(0x1de3c504));
writel(0x50, bar_addr[0]+0x2818);
DMA_alloc(0x1de63840, 0x5f2);
dma_writel(0x1de63840, P2V(0x1de3c510));
dma_writel(0x0, P2V(0x1de3c514));
DMA_alloc(0x1de64040, 0x5f2);
dma_writel(0x1de64040, P2V(0x1de3c520));
dma_writel(0x0, P2V(0x1de3c524));
DMA_alloc(0x1de64840, 0x5f2);
dma_writel(0x1de64840, P2V(0x1de3c530));
dma_writel(0x0, P2V(0x1de3c534));
DMA_alloc(0x1de65040, 0x5f2);
dma_writel(0x1de65040, P2V(0x1de3c540));
dma_writel(0x0, P2V(0x1de3c544));
DMA_alloc(0x1de65840, 0x5f2);
dma_writel(0x1de65840, P2V(0x1de3c550));
dma_writel(0x0, P2V(0x1de3c554));
DMA_alloc(0x1de66040, 0x5f2);
dma_writel(0x1de66040, P2V(0x1de3c560));
dma_writel(0x0, P2V(0x1de3c564));
DMA_alloc(0x1de66840, 0x5f2);
dma_writel(0x1de66840, P2V(0x1de3c570));
dma_writel(0x0, P2V(0x1de3c574));
DMA_alloc(0x1de67040, 0x5f2);
dma_writel(0x1de67040, P2V(0x1de3c580));
dma_writel(0x0, P2V(0x1de3c584));
DMA_alloc(0x1de67840, 0x5f2);
dma_writel(0x1de67840, P2V(0x1de3c590));
dma_writel(0x0, P2V(0x1de3c594));
DMA_alloc(0x1c488040, 0x5f2);
dma_writel(0x1c488040, P2V(0x1de3c5a0));
dma_writel(0x0, P2V(0x1de3c5a4));
DMA_alloc(0x1c488840, 0x5f2);
dma_writel(0x1c488840, P2V(0x1de3c5b0));
dma_writel(0x0, P2V(0x1de3c5b4));
DMA_alloc(0x1c489040, 0x5f2);
dma_writel(0x1c489040, P2V(0x1de3c5c0));
dma_writel(0x0, P2V(0x1de3c5c4));
DMA_alloc(0x1c489840, 0x5f2);
dma_writel(0x1c489840, P2V(0x1de3c5d0));
dma_writel(0x0, P2V(0x1de3c5d4));
DMA_alloc(0x1c48a040, 0x5f2);
dma_writel(0x1c48a040, P2V(0x1de3c5e0));
dma_writel(0x0, P2V(0x1de3c5e4));
DMA_alloc(0x1c48a840, 0x5f2);
dma_writel(0x1c48a840, P2V(0x1de3c5f0));
dma_writel(0x0, P2V(0x1de3c5f4));
DMA_alloc(0x1c48b040, 0x5f2);
dma_writel(0x1c48b040, P2V(0x1de3c600));
dma_writel(0x0, P2V(0x1de3c604));
writel(0x60, bar_addr[0]+0x2818);
DMA_alloc(0x1c48b840, 0x5f2);
dma_writel(0x1c48b840, P2V(0x1de3c610));
dma_writel(0x0, P2V(0x1de3c614));
DMA_alloc(0x1c48c040, 0x5f2);
dma_writel(0x1c48c040, P2V(0x1de3c620));
dma_writel(0x0, P2V(0x1de3c624));
DMA_alloc(0x1c48c840, 0x5f2);
dma_writel(0x1c48c840, P2V(0x1de3c630));
dma_writel(0x0, P2V(0x1de3c634));
DMA_alloc(0x1c48d040, 0x5f2);
dma_writel(0x1c48d040, P2V(0x1de3c640));
dma_writel(0x0, P2V(0x1de3c644));
DMA_alloc(0x1c48d840, 0x5f2);
dma_writel(0x1c48d840, P2V(0x1de3c650));
dma_writel(0x0, P2V(0x1de3c654));
DMA_alloc(0x1c48e040, 0x5f2);
dma_writel(0x1c48e040, P2V(0x1de3c660));
dma_writel(0x0, P2V(0x1de3c664));
DMA_alloc(0x1c48e840, 0x5f2);
dma_writel(0x1c48e840, P2V(0x1de3c670));
dma_writel(0x0, P2V(0x1de3c674));
DMA_alloc(0x1c48f040, 0x5f2);
dma_writel(0x1c48f040, P2V(0x1de3c680));
dma_writel(0x0, P2V(0x1de3c684));
DMA_alloc(0x1c48f840, 0x5f2);
dma_writel(0x1c48f840, P2V(0x1de3c690));
dma_writel(0x0, P2V(0x1de3c694));
DMA_alloc(0x1de48040, 0x5f2);
dma_writel(0x1de48040, P2V(0x1de3c6a0));
dma_writel(0x0, P2V(0x1de3c6a4));
DMA_alloc(0x1de48840, 0x5f2);
dma_writel(0x1de48840, P2V(0x1de3c6b0));
dma_writel(0x0, P2V(0x1de3c6b4));
DMA_alloc(0x1de49040, 0x5f2);
dma_writel(0x1de49040, P2V(0x1de3c6c0));
dma_writel(0x0, P2V(0x1de3c6c4));
DMA_alloc(0x1de49840, 0x5f2);
dma_writel(0x1de49840, P2V(0x1de3c6d0));
dma_writel(0x0, P2V(0x1de3c6d4));
DMA_alloc(0x1de4a040, 0x5f2);
dma_writel(0x1de4a040, P2V(0x1de3c6e0));
dma_writel(0x0, P2V(0x1de3c6e4));
DMA_alloc(0x1de4a840, 0x5f2);
dma_writel(0x1de4a840, P2V(0x1de3c6f0));
dma_writel(0x0, P2V(0x1de3c6f4));
DMA_alloc(0x1de4b040, 0x5f2);
dma_writel(0x1de4b040, P2V(0x1de3c700));
dma_writel(0x0, P2V(0x1de3c704));
writel(0x70, bar_addr[0]+0x2818);
DMA_alloc(0x1de4b840, 0x5f2);
dma_writel(0x1de4b840, P2V(0x1de3c710));
dma_writel(0x0, P2V(0x1de3c714));
DMA_alloc(0x1de4c040, 0x5f2);
dma_writel(0x1de4c040, P2V(0x1de3c720));
dma_writel(0x0, P2V(0x1de3c724));
DMA_alloc(0x1de4c840, 0x5f2);
dma_writel(0x1de4c840, P2V(0x1de3c730));
dma_writel(0x0, P2V(0x1de3c734));
DMA_alloc(0x1de4d040, 0x5f2);
dma_writel(0x1de4d040, P2V(0x1de3c740));
dma_writel(0x0, P2V(0x1de3c744));
DMA_alloc(0x1de4d840, 0x5f2);
dma_writel(0x1de4d840, P2V(0x1de3c750));
dma_writel(0x0, P2V(0x1de3c754));
DMA_alloc(0x1de4e040, 0x5f2);
dma_writel(0x1de4e040, P2V(0x1de3c760));
dma_writel(0x0, P2V(0x1de3c764));
DMA_alloc(0x1de4e840, 0x5f2);
dma_writel(0x1de4e840, P2V(0x1de3c770));
dma_writel(0x0, P2V(0x1de3c774));
DMA_alloc(0x1de4f040, 0x5f2);
dma_writel(0x1de4f040, P2V(0x1de3c780));
dma_writel(0x0, P2V(0x1de3c784));
DMA_alloc(0x1de4f840, 0x5f2);
dma_writel(0x1de4f840, P2V(0x1de3c790));
dma_writel(0x0, P2V(0x1de3c794));
DMA_alloc(0x1c470040, 0x5f2);
dma_writel(0x1c470040, P2V(0x1de3c7a0));
dma_writel(0x0, P2V(0x1de3c7a4));
DMA_alloc(0x1c470840, 0x5f2);
dma_writel(0x1c470840, P2V(0x1de3c7b0));
dma_writel(0x0, P2V(0x1de3c7b4));
DMA_alloc(0x1c471040, 0x5f2);
dma_writel(0x1c471040, P2V(0x1de3c7c0));
dma_writel(0x0, P2V(0x1de3c7c4));
DMA_alloc(0x1c471840, 0x5f2);
dma_writel(0x1c471840, P2V(0x1de3c7d0));
dma_writel(0x0, P2V(0x1de3c7d4));
DMA_alloc(0x1c472040, 0x5f2);
dma_writel(0x1c472040, P2V(0x1de3c7e0));
dma_writel(0x0, P2V(0x1de3c7e4));
DMA_alloc(0x1c472840, 0x5f2);
dma_writel(0x1c472840, P2V(0x1de3c7f0));
dma_writel(0x0, P2V(0x1de3c7f4));
DMA_alloc(0x1c473040, 0x5f2);
dma_writel(0x1c473040, P2V(0x1de3c800));
dma_writel(0x0, P2V(0x1de3c804));
writel(0x80, bar_addr[0]+0x2818);
DMA_alloc(0x1c473840, 0x5f2);
dma_writel(0x1c473840, P2V(0x1de3c810));
dma_writel(0x0, P2V(0x1de3c814));
DMA_alloc(0x1c474040, 0x5f2);
dma_writel(0x1c474040, P2V(0x1de3c820));
dma_writel(0x0, P2V(0x1de3c824));
DMA_alloc(0x1c474840, 0x5f2);
dma_writel(0x1c474840, P2V(0x1de3c830));
dma_writel(0x0, P2V(0x1de3c834));
DMA_alloc(0x1c475040, 0x5f2);
dma_writel(0x1c475040, P2V(0x1de3c840));
dma_writel(0x0, P2V(0x1de3c844));
DMA_alloc(0x1c475840, 0x5f2);
dma_writel(0x1c475840, P2V(0x1de3c850));
dma_writel(0x0, P2V(0x1de3c854));
DMA_alloc(0x1c476040, 0x5f2);
dma_writel(0x1c476040, P2V(0x1de3c860));
dma_writel(0x0, P2V(0x1de3c864));
DMA_alloc(0x1c476840, 0x5f2);
dma_writel(0x1c476840, P2V(0x1de3c870));
dma_writel(0x0, P2V(0x1de3c874));
DMA_alloc(0x1c477040, 0x5f2);
dma_writel(0x1c477040, P2V(0x1de3c880));
dma_writel(0x0, P2V(0x1de3c884));
DMA_alloc(0x1c477840, 0x5f2);
dma_writel(0x1c477840, P2V(0x1de3c890));
dma_writel(0x0, P2V(0x1de3c894));
DMA_alloc(0x1c478040, 0x5f2);
dma_writel(0x1c478040, P2V(0x1de3c8a0));
dma_writel(0x0, P2V(0x1de3c8a4));
DMA_alloc(0x1c478840, 0x5f2);
dma_writel(0x1c478840, P2V(0x1de3c8b0));
dma_writel(0x0, P2V(0x1de3c8b4));
DMA_alloc(0x1c479040, 0x5f2);
dma_writel(0x1c479040, P2V(0x1de3c8c0));
dma_writel(0x0, P2V(0x1de3c8c4));
DMA_alloc(0x1c479840, 0x5f2);
dma_writel(0x1c479840, P2V(0x1de3c8d0));
dma_writel(0x0, P2V(0x1de3c8d4));
DMA_alloc(0x1c47a040, 0x5f2);
dma_writel(0x1c47a040, P2V(0x1de3c8e0));
dma_writel(0x0, P2V(0x1de3c8e4));
DMA_alloc(0x1c47a840, 0x5f2);
dma_writel(0x1c47a840, P2V(0x1de3c8f0));
dma_writel(0x0, P2V(0x1de3c8f4));
DMA_alloc(0x1c47b040, 0x5f2);
dma_writel(0x1c47b040, P2V(0x1de3c900));
dma_writel(0x0, P2V(0x1de3c904));
writel(0x90, bar_addr[0]+0x2818);
DMA_alloc(0x1c47b840, 0x5f2);
dma_writel(0x1c47b840, P2V(0x1de3c910));
dma_writel(0x0, P2V(0x1de3c914));
DMA_alloc(0x1c47c040, 0x5f2);
dma_writel(0x1c47c040, P2V(0x1de3c920));
dma_writel(0x0, P2V(0x1de3c924));
DMA_alloc(0x1c47c840, 0x5f2);
dma_writel(0x1c47c840, P2V(0x1de3c930));
dma_writel(0x0, P2V(0x1de3c934));
DMA_alloc(0x1c47d040, 0x5f2);
dma_writel(0x1c47d040, P2V(0x1de3c940));
dma_writel(0x0, P2V(0x1de3c944));
DMA_alloc(0x1c47d840, 0x5f2);
dma_writel(0x1c47d840, P2V(0x1de3c950));
dma_writel(0x0, P2V(0x1de3c954));
DMA_alloc(0x1c47e040, 0x5f2);
dma_writel(0x1c47e040, P2V(0x1de3c960));
dma_writel(0x0, P2V(0x1de3c964));
DMA_alloc(0x1c47e840, 0x5f2);
dma_writel(0x1c47e840, P2V(0x1de3c970));
dma_writel(0x0, P2V(0x1de3c974));
DMA_alloc(0x1c47f040, 0x5f2);
dma_writel(0x1c47f040, P2V(0x1de3c980));
dma_writel(0x0, P2V(0x1de3c984));
DMA_alloc(0x1c47f840, 0x5f2);
dma_writel(0x1c47f840, P2V(0x1de3c990));
dma_writel(0x0, P2V(0x1de3c994));
DMA_alloc(0x1c4a0040, 0x5f2);
dma_writel(0x1c4a0040, P2V(0x1de3c9a0));
dma_writel(0x0, P2V(0x1de3c9a4));
DMA_alloc(0x1c4a0840, 0x5f2);
dma_writel(0x1c4a0840, P2V(0x1de3c9b0));
dma_writel(0x0, P2V(0x1de3c9b4));
DMA_alloc(0x1c4a1040, 0x5f2);
dma_writel(0x1c4a1040, P2V(0x1de3c9c0));
dma_writel(0x0, P2V(0x1de3c9c4));
DMA_alloc(0x1c4a1840, 0x5f2);
dma_writel(0x1c4a1840, P2V(0x1de3c9d0));
dma_writel(0x0, P2V(0x1de3c9d4));
DMA_alloc(0x1c4a2040, 0x5f2);
dma_writel(0x1c4a2040, P2V(0x1de3c9e0));
dma_writel(0x0, P2V(0x1de3c9e4));
DMA_alloc(0x1c4a2840, 0x5f2);
dma_writel(0x1c4a2840, P2V(0x1de3c9f0));
dma_writel(0x0, P2V(0x1de3c9f4));
DMA_alloc(0x1c4a3040, 0x5f2);
dma_writel(0x1c4a3040, P2V(0x1de3ca00));
dma_writel(0x0, P2V(0x1de3ca04));
writel(0xa0, bar_addr[0]+0x2818);
DMA_alloc(0x1c4a3840, 0x5f2);
dma_writel(0x1c4a3840, P2V(0x1de3ca10));
dma_writel(0x0, P2V(0x1de3ca14));
DMA_alloc(0x1c4a4040, 0x5f2);
dma_writel(0x1c4a4040, P2V(0x1de3ca20));
dma_writel(0x0, P2V(0x1de3ca24));
DMA_alloc(0x1c4a4840, 0x5f2);
dma_writel(0x1c4a4840, P2V(0x1de3ca30));
dma_writel(0x0, P2V(0x1de3ca34));
DMA_alloc(0x1c4a5040, 0x5f2);
dma_writel(0x1c4a5040, P2V(0x1de3ca40));
dma_writel(0x0, P2V(0x1de3ca44));
DMA_alloc(0x1c4a5840, 0x5f2);
dma_writel(0x1c4a5840, P2V(0x1de3ca50));
dma_writel(0x0, P2V(0x1de3ca54));
DMA_alloc(0x1c4a6040, 0x5f2);
dma_writel(0x1c4a6040, P2V(0x1de3ca60));
dma_writel(0x0, P2V(0x1de3ca64));
DMA_alloc(0x1c4a6840, 0x5f2);
dma_writel(0x1c4a6840, P2V(0x1de3ca70));
dma_writel(0x0, P2V(0x1de3ca74));
DMA_alloc(0x1c4a7040, 0x5f2);
dma_writel(0x1c4a7040, P2V(0x1de3ca80));
dma_writel(0x0, P2V(0x1de3ca84));
DMA_alloc(0x1c4a7840, 0x5f2);
dma_writel(0x1c4a7840, P2V(0x1de3ca90));
dma_writel(0x0, P2V(0x1de3ca94));
DMA_alloc(0x1c4a8040, 0x5f2);
dma_writel(0x1c4a8040, P2V(0x1de3caa0));
dma_writel(0x0, P2V(0x1de3caa4));
DMA_alloc(0x1c4a8840, 0x5f2);
dma_writel(0x1c4a8840, P2V(0x1de3cab0));
dma_writel(0x0, P2V(0x1de3cab4));
DMA_alloc(0x1c4a9040, 0x5f2);
dma_writel(0x1c4a9040, P2V(0x1de3cac0));
dma_writel(0x0, P2V(0x1de3cac4));
DMA_alloc(0x1c4a9840, 0x5f2);
dma_writel(0x1c4a9840, P2V(0x1de3cad0));
dma_writel(0x0, P2V(0x1de3cad4));
DMA_alloc(0x1c4aa040, 0x5f2);
dma_writel(0x1c4aa040, P2V(0x1de3cae0));
dma_writel(0x0, P2V(0x1de3cae4));
DMA_alloc(0x1c4aa840, 0x5f2);
dma_writel(0x1c4aa840, P2V(0x1de3caf0));
dma_writel(0x0, P2V(0x1de3caf4));
DMA_alloc(0x1c4ab040, 0x5f2);
dma_writel(0x1c4ab040, P2V(0x1de3cb00));
dma_writel(0x0, P2V(0x1de3cb04));
writel(0xb0, bar_addr[0]+0x2818);
DMA_alloc(0x1c4ab840, 0x5f2);
dma_writel(0x1c4ab840, P2V(0x1de3cb10));
dma_writel(0x0, P2V(0x1de3cb14));
DMA_alloc(0x1c4ac040, 0x5f2);
dma_writel(0x1c4ac040, P2V(0x1de3cb20));
dma_writel(0x0, P2V(0x1de3cb24));
DMA_alloc(0x1c4ac840, 0x5f2);
dma_writel(0x1c4ac840, P2V(0x1de3cb30));
dma_writel(0x0, P2V(0x1de3cb34));
DMA_alloc(0x1c4ad040, 0x5f2);
dma_writel(0x1c4ad040, P2V(0x1de3cb40));
dma_writel(0x0, P2V(0x1de3cb44));
DMA_alloc(0x1c4ad840, 0x5f2);
dma_writel(0x1c4ad840, P2V(0x1de3cb50));
dma_writel(0x0, P2V(0x1de3cb54));
DMA_alloc(0x1c4ae040, 0x5f2);
dma_writel(0x1c4ae040, P2V(0x1de3cb60));
dma_writel(0x0, P2V(0x1de3cb64));
DMA_alloc(0x1c4ae840, 0x5f2);
dma_writel(0x1c4ae840, P2V(0x1de3cb70));
dma_writel(0x0, P2V(0x1de3cb74));
DMA_alloc(0x1c4af040, 0x5f2);
dma_writel(0x1c4af040, P2V(0x1de3cb80));
dma_writel(0x0, P2V(0x1de3cb84));
DMA_alloc(0x1c4af840, 0x5f2);
dma_writel(0x1c4af840, P2V(0x1de3cb90));
dma_writel(0x0, P2V(0x1de3cb94));
DMA_alloc(0x1c4b0040, 0x5f2);
dma_writel(0x1c4b0040, P2V(0x1de3cba0));
dma_writel(0x0, P2V(0x1de3cba4));
DMA_alloc(0x1c4b0840, 0x5f2);
dma_writel(0x1c4b0840, P2V(0x1de3cbb0));
dma_writel(0x0, P2V(0x1de3cbb4));
DMA_alloc(0x1c4b1040, 0x5f2);
dma_writel(0x1c4b1040, P2V(0x1de3cbc0));
dma_writel(0x0, P2V(0x1de3cbc4));
DMA_alloc(0x1c4b1840, 0x5f2);
dma_writel(0x1c4b1840, P2V(0x1de3cbd0));
dma_writel(0x0, P2V(0x1de3cbd4));
DMA_alloc(0x1c4b2040, 0x5f2);
dma_writel(0x1c4b2040, P2V(0x1de3cbe0));
dma_writel(0x0, P2V(0x1de3cbe4));
DMA_alloc(0x1c4b2840, 0x5f2);
dma_writel(0x1c4b2840, P2V(0x1de3cbf0));
dma_writel(0x0, P2V(0x1de3cbf4));
DMA_alloc(0x1c4b3040, 0x5f2);
dma_writel(0x1c4b3040, P2V(0x1de3cc00));
dma_writel(0x0, P2V(0x1de3cc04));
writel(0xc0, bar_addr[0]+0x2818);
DMA_alloc(0x1c4b3840, 0x5f2);
dma_writel(0x1c4b3840, P2V(0x1de3cc10));
dma_writel(0x0, P2V(0x1de3cc14));
DMA_alloc(0x1c4b4040, 0x5f2);
dma_writel(0x1c4b4040, P2V(0x1de3cc20));
dma_writel(0x0, P2V(0x1de3cc24));
DMA_alloc(0x1c4b4840, 0x5f2);
dma_writel(0x1c4b4840, P2V(0x1de3cc30));
dma_writel(0x0, P2V(0x1de3cc34));
DMA_alloc(0x1c4b5040, 0x5f2);
dma_writel(0x1c4b5040, P2V(0x1de3cc40));
dma_writel(0x0, P2V(0x1de3cc44));
DMA_alloc(0x1c4b5840, 0x5f2);
dma_writel(0x1c4b5840, P2V(0x1de3cc50));
dma_writel(0x0, P2V(0x1de3cc54));
DMA_alloc(0x1c4b6040, 0x5f2);
dma_writel(0x1c4b6040, P2V(0x1de3cc60));
dma_writel(0x0, P2V(0x1de3cc64));
DMA_alloc(0x1c4b6840, 0x5f2);
dma_writel(0x1c4b6840, P2V(0x1de3cc70));
dma_writel(0x0, P2V(0x1de3cc74));
DMA_alloc(0x1c4b7040, 0x5f2);
dma_writel(0x1c4b7040, P2V(0x1de3cc80));
dma_writel(0x0, P2V(0x1de3cc84));
DMA_alloc(0x1c4b7840, 0x5f2);
dma_writel(0x1c4b7840, P2V(0x1de3cc90));
dma_writel(0x0, P2V(0x1de3cc94));
DMA_alloc(0x1c4b8040, 0x5f2);
dma_writel(0x1c4b8040, P2V(0x1de3cca0));
dma_writel(0x0, P2V(0x1de3cca4));
DMA_alloc(0x1c4b8840, 0x5f2);
dma_writel(0x1c4b8840, P2V(0x1de3ccb0));
dma_writel(0x0, P2V(0x1de3ccb4));
DMA_alloc(0x1c4b9040, 0x5f2);
dma_writel(0x1c4b9040, P2V(0x1de3ccc0));
dma_writel(0x0, P2V(0x1de3ccc4));
DMA_alloc(0x1c4b9840, 0x5f2);
dma_writel(0x1c4b9840, P2V(0x1de3ccd0));
dma_writel(0x0, P2V(0x1de3ccd4));
DMA_alloc(0x1c4ba040, 0x5f2);
dma_writel(0x1c4ba040, P2V(0x1de3cce0));
dma_writel(0x0, P2V(0x1de3cce4));
DMA_alloc(0x1c4ba840, 0x5f2);
dma_writel(0x1c4ba840, P2V(0x1de3ccf0));
dma_writel(0x0, P2V(0x1de3ccf4));
DMA_alloc(0x1c4bb040, 0x5f2);
dma_writel(0x1c4bb040, P2V(0x1de3cd00));
dma_writel(0x0, P2V(0x1de3cd04));
writel(0xd0, bar_addr[0]+0x2818);
DMA_alloc(0x1c4bb840, 0x5f2);
dma_writel(0x1c4bb840, P2V(0x1de3cd10));
dma_writel(0x0, P2V(0x1de3cd14));
DMA_alloc(0x1c4bc040, 0x5f2);
dma_writel(0x1c4bc040, P2V(0x1de3cd20));
dma_writel(0x0, P2V(0x1de3cd24));
DMA_alloc(0x1c4bc840, 0x5f2);
dma_writel(0x1c4bc840, P2V(0x1de3cd30));
dma_writel(0x0, P2V(0x1de3cd34));
DMA_alloc(0x1c4bd040, 0x5f2);
dma_writel(0x1c4bd040, P2V(0x1de3cd40));
dma_writel(0x0, P2V(0x1de3cd44));
DMA_alloc(0x1c4bd840, 0x5f2);
dma_writel(0x1c4bd840, P2V(0x1de3cd50));
dma_writel(0x0, P2V(0x1de3cd54));
DMA_alloc(0x1c4be040, 0x5f2);
dma_writel(0x1c4be040, P2V(0x1de3cd60));
dma_writel(0x0, P2V(0x1de3cd64));
DMA_alloc(0x1c4be840, 0x5f2);
dma_writel(0x1c4be840, P2V(0x1de3cd70));
dma_writel(0x0, P2V(0x1de3cd74));
DMA_alloc(0x1c4bf040, 0x5f2);
dma_writel(0x1c4bf040, P2V(0x1de3cd80));
dma_writel(0x0, P2V(0x1de3cd84));
DMA_alloc(0x1c4bf840, 0x5f2);
dma_writel(0x1c4bf840, P2V(0x1de3cd90));
dma_writel(0x0, P2V(0x1de3cd94));
DMA_alloc(0x1c4c0040, 0x5f2);
dma_writel(0x1c4c0040, P2V(0x1de3cda0));
dma_writel(0x0, P2V(0x1de3cda4));
DMA_alloc(0x1c4c0840, 0x5f2);
dma_writel(0x1c4c0840, P2V(0x1de3cdb0));
dma_writel(0x0, P2V(0x1de3cdb4));
DMA_alloc(0x1c4c1040, 0x5f2);
dma_writel(0x1c4c1040, P2V(0x1de3cdc0));
dma_writel(0x0, P2V(0x1de3cdc4));
DMA_alloc(0x1c4c1840, 0x5f2);
dma_writel(0x1c4c1840, P2V(0x1de3cdd0));
dma_writel(0x0, P2V(0x1de3cdd4));
DMA_alloc(0x1c4c2040, 0x5f2);
dma_writel(0x1c4c2040, P2V(0x1de3cde0));
dma_writel(0x0, P2V(0x1de3cde4));
DMA_alloc(0x1c4c2840, 0x5f2);
dma_writel(0x1c4c2840, P2V(0x1de3cdf0));
dma_writel(0x0, P2V(0x1de3cdf4));
DMA_alloc(0x1c4c3040, 0x5f2);
dma_writel(0x1c4c3040, P2V(0x1de3ce00));
dma_writel(0x0, P2V(0x1de3ce04));
writel(0xe0, bar_addr[0]+0x2818);
DMA_alloc(0x1c4c3840, 0x5f2);
dma_writel(0x1c4c3840, P2V(0x1de3ce10));
dma_writel(0x0, P2V(0x1de3ce14));
DMA_alloc(0x1c4c4040, 0x5f2);
dma_writel(0x1c4c4040, P2V(0x1de3ce20));
dma_writel(0x0, P2V(0x1de3ce24));
DMA_alloc(0x1c4c4840, 0x5f2);
dma_writel(0x1c4c4840, P2V(0x1de3ce30));
dma_writel(0x0, P2V(0x1de3ce34));
DMA_alloc(0x1c4c5040, 0x5f2);
dma_writel(0x1c4c5040, P2V(0x1de3ce40));
dma_writel(0x0, P2V(0x1de3ce44));
DMA_alloc(0x1c4c5840, 0x5f2);
dma_writel(0x1c4c5840, P2V(0x1de3ce50));
dma_writel(0x0, P2V(0x1de3ce54));
DMA_alloc(0x1c4c6040, 0x5f2);
dma_writel(0x1c4c6040, P2V(0x1de3ce60));
dma_writel(0x0, P2V(0x1de3ce64));
DMA_alloc(0x1c4c6840, 0x5f2);
dma_writel(0x1c4c6840, P2V(0x1de3ce70));
dma_writel(0x0, P2V(0x1de3ce74));
DMA_alloc(0x1c4c7040, 0x5f2);
dma_writel(0x1c4c7040, P2V(0x1de3ce80));
dma_writel(0x0, P2V(0x1de3ce84));
DMA_alloc(0x1c4c7840, 0x5f2);
dma_writel(0x1c4c7840, P2V(0x1de3ce90));
dma_writel(0x0, P2V(0x1de3ce94));
DMA_alloc(0x1c4c8040, 0x5f2);
dma_writel(0x1c4c8040, P2V(0x1de3cea0));
dma_writel(0x0, P2V(0x1de3cea4));
DMA_alloc(0x1c4c8840, 0x5f2);
dma_writel(0x1c4c8840, P2V(0x1de3ceb0));
dma_writel(0x0, P2V(0x1de3ceb4));
DMA_alloc(0x1c4c9040, 0x5f2);
dma_writel(0x1c4c9040, P2V(0x1de3cec0));
dma_writel(0x0, P2V(0x1de3cec4));
DMA_alloc(0x1c4c9840, 0x5f2);
dma_writel(0x1c4c9840, P2V(0x1de3ced0));
dma_writel(0x0, P2V(0x1de3ced4));
DMA_alloc(0x1c4ca040, 0x5f2);
dma_writel(0x1c4ca040, P2V(0x1de3cee0));
dma_writel(0x0, P2V(0x1de3cee4));
DMA_alloc(0x1c4ca840, 0x5f2);
dma_writel(0x1c4ca840, P2V(0x1de3cef0));
dma_writel(0x0, P2V(0x1de3cef4));
DMA_alloc(0x1c4cb040, 0x5f2);
dma_writel(0x1c4cb040, P2V(0x1de3cf00));
dma_writel(0x0, P2V(0x1de3cf04));
writel(0xf0, bar_addr[0]+0x2818);
DMA_alloc(0x1c4cb840, 0x5f2);
dma_writel(0x1c4cb840, P2V(0x1de3cf10));
dma_writel(0x0, P2V(0x1de3cf14));
DMA_alloc(0x1c4cc040, 0x5f2);
dma_writel(0x1c4cc040, P2V(0x1de3cf20));
dma_writel(0x0, P2V(0x1de3cf24));
DMA_alloc(0x1c4cc840, 0x5f2);
dma_writel(0x1c4cc840, P2V(0x1de3cf30));
dma_writel(0x0, P2V(0x1de3cf34));
DMA_alloc(0x1c4cd040, 0x5f2);
dma_writel(0x1c4cd040, P2V(0x1de3cf40));
dma_writel(0x0, P2V(0x1de3cf44));
DMA_alloc(0x1c4cd840, 0x5f2);
dma_writel(0x1c4cd840, P2V(0x1de3cf50));
dma_writel(0x0, P2V(0x1de3cf54));
DMA_alloc(0x1c4ce040, 0x5f2);
dma_writel(0x1c4ce040, P2V(0x1de3cf60));
dma_writel(0x0, P2V(0x1de3cf64));
DMA_alloc(0x1c4ce840, 0x5f2);
dma_writel(0x1c4ce840, P2V(0x1de3cf70));
dma_writel(0x0, P2V(0x1de3cf74));
DMA_alloc(0x1c4cf040, 0x5f2);
dma_writel(0x1c4cf040, P2V(0x1de3cf80));
dma_writel(0x0, P2V(0x1de3cf84));
DMA_alloc(0x1c4cf840, 0x5f2);
dma_writel(0x1c4cf840, P2V(0x1de3cf90));
dma_writel(0x0, P2V(0x1de3cf94));
DMA_alloc(0x1c4d0040, 0x5f2);
dma_writel(0x1c4d0040, P2V(0x1de3cfa0));
dma_writel(0x0, P2V(0x1de3cfa4));
DMA_alloc(0x1c4d0840, 0x5f2);
dma_writel(0x1c4d0840, P2V(0x1de3cfb0));
dma_writel(0x0, P2V(0x1de3cfb4));
DMA_alloc(0x1c4d1040, 0x5f2);
dma_writel(0x1c4d1040, P2V(0x1de3cfc0));
dma_writel(0x0, P2V(0x1de3cfc4));
DMA_alloc(0x1c4d1840, 0x5f2);
dma_writel(0x1c4d1840, P2V(0x1de3cfd0));
dma_writel(0x0, P2V(0x1de3cfd4));
DMA_alloc(0x1c4d2040, 0x5f2);
dma_writel(0x1c4d2040, P2V(0x1de3cfe0));
dma_writel(0x0, P2V(0x1de3cfe4));
writel(0xfee01004, bar_addr[3]+0x0);
writel(0x0, bar_addr[3]+0x4);
writel(0x4027, bar_addr[3]+0x8);
writel(0x0, bar_addr[3]+0xc);
res = readl(bar_addr[3]+0x0);

writel(0xfee01004, bar_addr[3]+0x0);
writel(0x0, bar_addr[3]+0x4);
writel(0x4027, bar_addr[3]+0x8);
writel(0xfee01004, bar_addr[3]+0x10);
writel(0x0, bar_addr[3]+0x14);
writel(0x4028, bar_addr[3]+0x18);
writel(0x0, bar_addr[3]+0x1c);
res = readl(bar_addr[3]+0x0);

writel(0xfee01004, bar_addr[3]+0x10);
writel(0x0, bar_addr[3]+0x14);
writel(0x4028, bar_addr[3]+0x18);
writel(0xfee01004, bar_addr[3]+0x20);
writel(0x0, bar_addr[3]+0x24);
writel(0x4029, bar_addr[3]+0x28);
writel(0x0, bar_addr[3]+0x2c);
res = readl(bar_addr[3]+0x0);

writel(0xfee01004, bar_addr[3]+0x20);
writel(0x0, bar_addr[3]+0x24);
writel(0x4029, bar_addr[3]+0x28);
res = readl(bar_addr[0]+0x5008);

writel(0x9000, bar_addr[0]+0x5008);
writel(0xc3, bar_addr[0]+0xe8);
writel(0xc3, bar_addr[0]+0xec);
writel(0xc3, bar_addr[0]+0xf0);
writel(0x800a0908, bar_addr[0]+0xe4);
res = readl(bar_addr[0]+0x18);

writel(0x91400000, bar_addr[0]+0x18);
res = readl(bar_addr[0]+0x8);

writel(0x500000, bar_addr[0]+0xdc);
writel(0x1570244, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0x8);

writel(0x1000004, bar_addr[0]+0xc8);
res = readl(bar_addr[0]+0xc0);

writel(0x1070244, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0x100);

writel(0x0, bar_addr[0]+0x53fc);
writel(0x0, bar_addr[0]+0x53f8);
writel(0x0, bar_addr[0]+0x53f4);
writel(0x0, bar_addr[0]+0x53f0);
writel(0x0, bar_addr[0]+0x53ec);
writel(0x0, bar_addr[0]+0x53e8);
writel(0x0, bar_addr[0]+0x53e4);
writel(0x0, bar_addr[0]+0x53e0);
writel(0x0, bar_addr[0]+0x53dc);
writel(0x0, bar_addr[0]+0x53d8);
writel(0x0, bar_addr[0]+0x53d4);
writel(0x0, bar_addr[0]+0x53d0);
writel(0x0, bar_addr[0]+0x53cc);
writel(0x0, bar_addr[0]+0x53c8);
writel(0x0, bar_addr[0]+0x53c4);
writel(0x0, bar_addr[0]+0x53c0);
writel(0x0, bar_addr[0]+0x53bc);
writel(0x0, bar_addr[0]+0x53b8);
writel(0x0, bar_addr[0]+0x53b4);
writel(0x0, bar_addr[0]+0x53b0);
writel(0x0, bar_addr[0]+0x53ac);
writel(0x0, bar_addr[0]+0x53a8);
writel(0x0, bar_addr[0]+0x53a4);
writel(0x0, bar_addr[0]+0x53a0);
writel(0x0, bar_addr[0]+0x539c);
writel(0x0, bar_addr[0]+0x5398);
writel(0x0, bar_addr[0]+0x5394);
writel(0x0, bar_addr[0]+0x5390);
writel(0x0, bar_addr[0]+0x538c);
writel(0x0, bar_addr[0]+0x5388);
writel(0x0, bar_addr[0]+0x5384);
writel(0x0, bar_addr[0]+0x5380);
writel(0x0, bar_addr[0]+0x537c);
writel(0x0, bar_addr[0]+0x5378);
writel(0x0, bar_addr[0]+0x5374);
writel(0x0, bar_addr[0]+0x5370);
writel(0x0, bar_addr[0]+0x536c);
writel(0x0, bar_addr[0]+0x5368);
writel(0x0, bar_addr[0]+0x5364);
writel(0x0, bar_addr[0]+0x5360);
writel(0x0, bar_addr[0]+0x535c);
writel(0x0, bar_addr[0]+0x5358);
writel(0x0, bar_addr[0]+0x5354);
writel(0x0, bar_addr[0]+0x5350);
writel(0x0, bar_addr[0]+0x534c);
writel(0x0, bar_addr[0]+0x5348);
writel(0x0, bar_addr[0]+0x5344);
writel(0x0, bar_addr[0]+0x5340);
writel(0x0, bar_addr[0]+0x533c);
writel(0x0, bar_addr[0]+0x5338);
writel(0x0, bar_addr[0]+0x5334);
writel(0x0, bar_addr[0]+0x5330);
writel(0x0, bar_addr[0]+0x532c);
writel(0x0, bar_addr[0]+0x5328);
writel(0x0, bar_addr[0]+0x5324);
writel(0x0, bar_addr[0]+0x5320);
writel(0x0, bar_addr[0]+0x531c);
writel(0x0, bar_addr[0]+0x5318);
writel(0x0, bar_addr[0]+0x5314);
writel(0x0, bar_addr[0]+0x5310);
writel(0x0, bar_addr[0]+0x530c);
writel(0x0, bar_addr[0]+0x5308);
writel(0x0, bar_addr[0]+0x5304);
writel(0x0, bar_addr[0]+0x5300);
writel(0x0, bar_addr[0]+0x52fc);
writel(0x0, bar_addr[0]+0x52f8);
writel(0x0, bar_addr[0]+0x52f4);
writel(0x0, bar_addr[0]+0x52f0);
writel(0x0, bar_addr[0]+0x52ec);
writel(0x0, bar_addr[0]+0x52e8);
writel(0x0, bar_addr[0]+0x52e4);
writel(0x0, bar_addr[0]+0x52e0);
writel(0x0, bar_addr[0]+0x52dc);
writel(0x0, bar_addr[0]+0x52d8);
writel(0x0, bar_addr[0]+0x52d4);
writel(0x0, bar_addr[0]+0x52d0);
writel(0x0, bar_addr[0]+0x52cc);
writel(0x0, bar_addr[0]+0x52c8);
writel(0x0, bar_addr[0]+0x52c4);
writel(0x0, bar_addr[0]+0x52c0);
writel(0x0, bar_addr[0]+0x52bc);
writel(0x0, bar_addr[0]+0x52b8);
writel(0x0, bar_addr[0]+0x52b4);
writel(0x0, bar_addr[0]+0x52b0);
writel(0x0, bar_addr[0]+0x52ac);
writel(0x0, bar_addr[0]+0x52a8);
writel(0x0, bar_addr[0]+0x52a4);
writel(0x0, bar_addr[0]+0x52a0);
writel(0x0, bar_addr[0]+0x529c);
writel(0x0, bar_addr[0]+0x5298);
writel(0x0, bar_addr[0]+0x5294);
writel(0x0, bar_addr[0]+0x5290);
writel(0x0, bar_addr[0]+0x528c);
writel(0x0, bar_addr[0]+0x5288);
writel(0x0, bar_addr[0]+0x5284);
writel(0x0, bar_addr[0]+0x5280);
writel(0x0, bar_addr[0]+0x527c);
writel(0x0, bar_addr[0]+0x5278);
writel(0x0, bar_addr[0]+0x5274);
writel(0x0, bar_addr[0]+0x5270);
writel(0x0, bar_addr[0]+0x526c);
writel(0x0, bar_addr[0]+0x5268);
writel(0x0, bar_addr[0]+0x5264);
writel(0x0, bar_addr[0]+0x5260);
writel(0x0, bar_addr[0]+0x525c);
writel(0x0, bar_addr[0]+0x5258);
writel(0x0, bar_addr[0]+0x5254);
writel(0x0, bar_addr[0]+0x5250);
writel(0x0, bar_addr[0]+0x524c);
writel(0x0, bar_addr[0]+0x5248);
writel(0x0, bar_addr[0]+0x5244);
writel(0x0, bar_addr[0]+0x5240);
writel(0x0, bar_addr[0]+0x523c);
writel(0x0, bar_addr[0]+0x5238);
writel(0x0, bar_addr[0]+0x5234);
writel(0x0, bar_addr[0]+0x5230);
writel(0x0, bar_addr[0]+0x522c);
writel(0x0, bar_addr[0]+0x5228);
writel(0x0, bar_addr[0]+0x5224);
writel(0x0, bar_addr[0]+0x5220);
writel(0x0, bar_addr[0]+0x521c);
writel(0x0, bar_addr[0]+0x5218);
writel(0x0, bar_addr[0]+0x5214);
writel(0x0, bar_addr[0]+0x5210);
writel(0x0, bar_addr[0]+0x520c);
writel(0x0, bar_addr[0]+0x5208);
writel(0x0, bar_addr[0]+0x5204);
writel(0x10000, bar_addr[0]+0x5200);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x100);

writel(0x4048002, bar_addr[0]+0x100);
writel(0x0, bar_addr[0]+0x5474);
writel(0x0, bar_addr[0]+0x5470);
writel(0x0, bar_addr[0]+0x546c);
writel(0x0, bar_addr[0]+0x5468);
writel(0x0, bar_addr[0]+0x5464);
writel(0x0, bar_addr[0]+0x5460);
writel(0x0, bar_addr[0]+0x545c);
writel(0x0, bar_addr[0]+0x5458);
writel(0x0, bar_addr[0]+0x5454);
writel(0x0, bar_addr[0]+0x5450);
writel(0x0, bar_addr[0]+0x544c);
writel(0x0, bar_addr[0]+0x5448);
writel(0x0, bar_addr[0]+0x5444);
writel(0x0, bar_addr[0]+0x5440);
writel(0x0, bar_addr[0]+0x543c);
writel(0x0, bar_addr[0]+0x5438);
writel(0x0, bar_addr[0]+0x5434);
writel(0x0, bar_addr[0]+0x5430);
writel(0x0, bar_addr[0]+0x542c);
writel(0x0, bar_addr[0]+0x5428);
writel(0x0, bar_addr[0]+0x5424);
writel(0x0, bar_addr[0]+0x5420);
writel(0x0, bar_addr[0]+0x541c);
writel(0x0, bar_addr[0]+0x5418);
writel(0x0, bar_addr[0]+0x5414);
writel(0x0, bar_addr[0]+0x5410);
writel(0x0, bar_addr[0]+0x540c);
writel(0x0, bar_addr[0]+0x5408);
res = readl(bar_addr[0]+0x8);

writel(0x4008002, bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x0);

writel(0x58140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
writel(0x3d, bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);

writel(0x100000, bar_addr[0]+0xc8);
writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);

writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8350000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = dma_readl(P2V(0x1de3c008));

writel(0x100000, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0x100);

writel(0x0, bar_addr[0]+0x53fc);
writel(0x0, bar_addr[0]+0x53f8);
writel(0x0, bar_addr[0]+0x53f4);
writel(0x0, bar_addr[0]+0x53f0);
writel(0x0, bar_addr[0]+0x53ec);
writel(0x0, bar_addr[0]+0x53e8);
writel(0x0, bar_addr[0]+0x53e4);
writel(0x0, bar_addr[0]+0x53e0);
writel(0x0, bar_addr[0]+0x53dc);
writel(0x0, bar_addr[0]+0x53d8);
writel(0x0, bar_addr[0]+0x53d4);
writel(0x0, bar_addr[0]+0x53d0);
writel(0x0, bar_addr[0]+0x53cc);
writel(0x0, bar_addr[0]+0x53c8);
writel(0x0, bar_addr[0]+0x53c4);
writel(0x0, bar_addr[0]+0x53c0);
writel(0x0, bar_addr[0]+0x53bc);
writel(0x0, bar_addr[0]+0x53b8);
writel(0x0, bar_addr[0]+0x53b4);
writel(0x0, bar_addr[0]+0x53b0);
writel(0x0, bar_addr[0]+0x53ac);
writel(0x0, bar_addr[0]+0x53a8);
writel(0x0, bar_addr[0]+0x53a4);
writel(0x0, bar_addr[0]+0x53a0);
writel(0x0, bar_addr[0]+0x539c);
writel(0x0, bar_addr[0]+0x5398);
writel(0x0, bar_addr[0]+0x5394);
writel(0x0, bar_addr[0]+0x5390);
writel(0x0, bar_addr[0]+0x538c);
writel(0x0, bar_addr[0]+0x5388);
writel(0x0, bar_addr[0]+0x5384);
writel(0x0, bar_addr[0]+0x5380);
writel(0x0, bar_addr[0]+0x537c);
writel(0x0, bar_addr[0]+0x5378);
writel(0x0, bar_addr[0]+0x5374);
writel(0x0, bar_addr[0]+0x5370);
writel(0x0, bar_addr[0]+0x536c);
writel(0x0, bar_addr[0]+0x5368);
writel(0x0, bar_addr[0]+0x5364);
writel(0x0, bar_addr[0]+0x5360);
writel(0x0, bar_addr[0]+0x535c);
writel(0x0, bar_addr[0]+0x5358);
writel(0x0, bar_addr[0]+0x5354);
writel(0x0, bar_addr[0]+0x5350);
writel(0x0, bar_addr[0]+0x534c);
writel(0x0, bar_addr[0]+0x5348);
writel(0x0, bar_addr[0]+0x5344);
writel(0x0, bar_addr[0]+0x5340);
writel(0x0, bar_addr[0]+0x533c);
writel(0x0, bar_addr[0]+0x5338);
writel(0x0, bar_addr[0]+0x5334);
writel(0x0, bar_addr[0]+0x5330);
writel(0x0, bar_addr[0]+0x532c);
writel(0x0, bar_addr[0]+0x5328);
writel(0x0, bar_addr[0]+0x5324);
writel(0x0, bar_addr[0]+0x5320);
writel(0x0, bar_addr[0]+0x531c);
writel(0x0, bar_addr[0]+0x5318);
writel(0x0, bar_addr[0]+0x5314);
writel(0x0, bar_addr[0]+0x5310);
writel(0x0, bar_addr[0]+0x530c);
writel(0x0, bar_addr[0]+0x5308);
writel(0x0, bar_addr[0]+0x5304);
writel(0x0, bar_addr[0]+0x5300);
writel(0x0, bar_addr[0]+0x52fc);
writel(0x0, bar_addr[0]+0x52f8);
writel(0x0, bar_addr[0]+0x52f4);
writel(0x0, bar_addr[0]+0x52f0);
writel(0x0, bar_addr[0]+0x52ec);
writel(0x0, bar_addr[0]+0x52e8);
writel(0x0, bar_addr[0]+0x52e4);
writel(0x0, bar_addr[0]+0x52e0);
writel(0x0, bar_addr[0]+0x52dc);
writel(0x0, bar_addr[0]+0x52d8);
writel(0x0, bar_addr[0]+0x52d4);
writel(0x0, bar_addr[0]+0x52d0);
writel(0x0, bar_addr[0]+0x52cc);
writel(0x0, bar_addr[0]+0x52c8);
writel(0x0, bar_addr[0]+0x52c4);
writel(0x0, bar_addr[0]+0x52c0);
writel(0x0, bar_addr[0]+0x52bc);
writel(0x0, bar_addr[0]+0x52b8);
writel(0x0, bar_addr[0]+0x52b4);
writel(0x0, bar_addr[0]+0x52b0);
writel(0x0, bar_addr[0]+0x52ac);
writel(0x0, bar_addr[0]+0x52a8);
writel(0x0, bar_addr[0]+0x52a4);
writel(0x0, bar_addr[0]+0x52a0);
writel(0x0, bar_addr[0]+0x529c);
writel(0x0, bar_addr[0]+0x5298);
writel(0x0, bar_addr[0]+0x5294);
writel(0x0, bar_addr[0]+0x5290);
writel(0x0, bar_addr[0]+0x528c);
writel(0x0, bar_addr[0]+0x5288);
writel(0x0, bar_addr[0]+0x5284);
writel(0x0, bar_addr[0]+0x5280);
writel(0x0, bar_addr[0]+0x527c);
writel(0x0, bar_addr[0]+0x5278);
writel(0x0, bar_addr[0]+0x5274);
writel(0x0, bar_addr[0]+0x5270);
writel(0x0, bar_addr[0]+0x526c);
writel(0x0, bar_addr[0]+0x5268);
writel(0x0, bar_addr[0]+0x5264);
writel(0x0, bar_addr[0]+0x5260);
writel(0x0, bar_addr[0]+0x525c);
writel(0x0, bar_addr[0]+0x5258);
writel(0x0, bar_addr[0]+0x5254);
writel(0x0, bar_addr[0]+0x5250);
writel(0x0, bar_addr[0]+0x524c);
writel(0x0, bar_addr[0]+0x5248);
writel(0x0, bar_addr[0]+0x5244);
writel(0x0, bar_addr[0]+0x5240);
writel(0x0, bar_addr[0]+0x523c);
writel(0x0, bar_addr[0]+0x5238);
writel(0x0, bar_addr[0]+0x5234);
writel(0x0, bar_addr[0]+0x5230);
writel(0x0, bar_addr[0]+0x522c);
writel(0x0, bar_addr[0]+0x5228);
writel(0x0, bar_addr[0]+0x5224);
writel(0x0, bar_addr[0]+0x5220);
writel(0x0, bar_addr[0]+0x521c);
writel(0x0, bar_addr[0]+0x5218);
writel(0x0, bar_addr[0]+0x5214);
writel(0x0, bar_addr[0]+0x5210);
writel(0x0, bar_addr[0]+0x520c);
writel(0x0, bar_addr[0]+0x5208);
writel(0x0, bar_addr[0]+0x5204);
writel(0x10000, bar_addr[0]+0x5200);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x100);

writel(0x4048002, bar_addr[0]+0x100);
writel(0x0, bar_addr[0]+0x5474);
writel(0x0, bar_addr[0]+0x5470);
writel(0x0, bar_addr[0]+0x546c);
writel(0x0, bar_addr[0]+0x5468);
writel(0x0, bar_addr[0]+0x5464);
writel(0x0, bar_addr[0]+0x5460);
writel(0x0, bar_addr[0]+0x545c);
writel(0x0, bar_addr[0]+0x5458);
writel(0x0, bar_addr[0]+0x5454);
writel(0x0, bar_addr[0]+0x5450);
writel(0x0, bar_addr[0]+0x544c);
writel(0x0, bar_addr[0]+0x5448);
writel(0x0, bar_addr[0]+0x5444);
writel(0x0, bar_addr[0]+0x5440);
writel(0x0, bar_addr[0]+0x543c);
writel(0x0, bar_addr[0]+0x5438);
writel(0x0, bar_addr[0]+0x5434);
writel(0x0, bar_addr[0]+0x5430);
writel(0x0, bar_addr[0]+0x542c);
writel(0x0, bar_addr[0]+0x5428);
writel(0x0, bar_addr[0]+0x5424);
writel(0x0, bar_addr[0]+0x5420);
writel(0x0, bar_addr[0]+0x541c);
writel(0x0, bar_addr[0]+0x5418);
writel(0x0, bar_addr[0]+0x5414);
writel(0x0, bar_addr[0]+0x5410);
writel(0x0, bar_addr[0]+0x540c);
writel(0x0, bar_addr[0]+0x5408);
res = readl(bar_addr[0]+0x8);

writel(0x4008002, bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x0);

writel(0x58140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8310000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x400);

writel(0x103f0f8, bar_addr[0]+0x400);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x0);

writel(0x58140245, bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8240000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8250000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x0);

writel(0x58140245, bar_addr[0]+0x0);
writel(0x3d, bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x14);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8200000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8240000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8250000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8260000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8290000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x82a0000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x82f0000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8310000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x400);

writel(0x103f0fa, bar_addr[0]+0x400);
res = readl(bar_addr[0]+0x4000);
res = readl(bar_addr[0]+0x4074);
res = readl(bar_addr[0]+0x4088);
res = readl(bar_addr[0]+0x408c);
res = readl(bar_addr[0]+0x4078);
res = readl(bar_addr[0]+0x407c);
res = readl(bar_addr[0]+0x40ac);
res = readl(bar_addr[0]+0x4010);
res = readl(bar_addr[0]+0x4048);
res = readl(bar_addr[0]+0x404c);
res = readl(bar_addr[0]+0x4050);
res = readl(bar_addr[0]+0x4054);
res = readl(bar_addr[0]+0x4080);
res = readl(bar_addr[0]+0x4090);
res = readl(bar_addr[0]+0x4094);
res = readl(bar_addr[0]+0x40a0);
res = readl(bar_addr[0]+0x40a4);
res = readl(bar_addr[0]+0x40f0);
res = readl(bar_addr[0]+0x40f4);
res = readl(bar_addr[0]+0x40d4);
res = readl(bar_addr[0]+0x4004);
res = readl(bar_addr[0]+0x400c);
res = readl(bar_addr[0]+0x403c);
res = readl(bar_addr[0]+0x40f8);
res = readl(bar_addr[0]+0x40fc);
res = readl(bar_addr[0]+0x40bc);
res = readl(bar_addr[0]+0x40b4);
res = readl(bar_addr[0]+0x40b8);

writel(0x100000, bar_addr[0]+0xc8);
writel(0x3d0, bar_addr[0]+0xe8);
writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);

writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);
res = dma_readl(P2V(0x1de3c008));

writel(0x100000, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8350000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0x4000);
res = readl(bar_addr[0]+0x4074);
res = readl(bar_addr[0]+0x4088);
res = readl(bar_addr[0]+0x408c);
res = readl(bar_addr[0]+0x4078);
res = readl(bar_addr[0]+0x407c);
res = readl(bar_addr[0]+0x40ac);
res = readl(bar_addr[0]+0x4010);
res = readl(bar_addr[0]+0x4048);
res = readl(bar_addr[0]+0x404c);
res = readl(bar_addr[0]+0x4050);
res = readl(bar_addr[0]+0x4054);
res = readl(bar_addr[0]+0x4080);
res = readl(bar_addr[0]+0x4090);
res = readl(bar_addr[0]+0x4094);
res = readl(bar_addr[0]+0x40a0);
res = readl(bar_addr[0]+0x40a4);
res = readl(bar_addr[0]+0x40f0);
res = readl(bar_addr[0]+0x40f4);
res = readl(bar_addr[0]+0x40d4);
res = readl(bar_addr[0]+0x4004);
res = readl(bar_addr[0]+0x400c);
res = readl(bar_addr[0]+0x403c);
res = readl(bar_addr[0]+0x40f8);
res = readl(bar_addr[0]+0x40fc);
res = readl(bar_addr[0]+0x40bc);
res = readl(bar_addr[0]+0x40b4);
res = readl(bar_addr[0]+0x40b8);
res = readl(bar_addr[0]+0x100);

writel(0x0, bar_addr[0]+0x53fc);
writel(0x0, bar_addr[0]+0x53f8);
writel(0x0, bar_addr[0]+0x53f4);
writel(0x0, bar_addr[0]+0x53f0);
writel(0x0, bar_addr[0]+0x53ec);
writel(0x0, bar_addr[0]+0x53e8);
writel(0x0, bar_addr[0]+0x53e4);
writel(0x0, bar_addr[0]+0x53e0);
writel(0x0, bar_addr[0]+0x53dc);
writel(0x0, bar_addr[0]+0x53d8);
writel(0x0, bar_addr[0]+0x53d4);
writel(0x0, bar_addr[0]+0x53d0);
writel(0x0, bar_addr[0]+0x53cc);
writel(0x0, bar_addr[0]+0x53c8);
writel(0x0, bar_addr[0]+0x53c4);
writel(0x0, bar_addr[0]+0x53c0);
writel(0x0, bar_addr[0]+0x53bc);
writel(0x0, bar_addr[0]+0x53b8);
writel(0x0, bar_addr[0]+0x53b4);
writel(0x0, bar_addr[0]+0x53b0);
writel(0x0, bar_addr[0]+0x53ac);
writel(0x0, bar_addr[0]+0x53a8);
writel(0x0, bar_addr[0]+0x53a4);
writel(0x0, bar_addr[0]+0x53a0);
writel(0x0, bar_addr[0]+0x539c);
writel(0x0, bar_addr[0]+0x5398);
writel(0x0, bar_addr[0]+0x5394);
writel(0x0, bar_addr[0]+0x5390);
writel(0x0, bar_addr[0]+0x538c);
writel(0x0, bar_addr[0]+0x5388);
writel(0x0, bar_addr[0]+0x5384);
writel(0x0, bar_addr[0]+0x5380);
writel(0x0, bar_addr[0]+0x537c);
writel(0x0, bar_addr[0]+0x5378);
writel(0x0, bar_addr[0]+0x5374);
writel(0x0, bar_addr[0]+0x5370);
writel(0x0, bar_addr[0]+0x536c);
writel(0x0, bar_addr[0]+0x5368);
writel(0x0, bar_addr[0]+0x5364);
writel(0x0, bar_addr[0]+0x5360);
writel(0x0, bar_addr[0]+0x535c);
writel(0x0, bar_addr[0]+0x5358);
writel(0x0, bar_addr[0]+0x5354);
writel(0x0, bar_addr[0]+0x5350);
writel(0x0, bar_addr[0]+0x534c);
writel(0x0, bar_addr[0]+0x5348);
writel(0x0, bar_addr[0]+0x5344);
writel(0x0, bar_addr[0]+0x5340);
writel(0x0, bar_addr[0]+0x533c);
writel(0x0, bar_addr[0]+0x5338);
writel(0x0, bar_addr[0]+0x5334);
writel(0x0, bar_addr[0]+0x5330);
writel(0x0, bar_addr[0]+0x532c);
writel(0x0, bar_addr[0]+0x5328);
writel(0x0, bar_addr[0]+0x5324);
writel(0x0, bar_addr[0]+0x5320);
writel(0x0, bar_addr[0]+0x531c);
writel(0x0, bar_addr[0]+0x5318);
writel(0x0, bar_addr[0]+0x5314);
writel(0x0, bar_addr[0]+0x5310);
writel(0x0, bar_addr[0]+0x530c);
writel(0x0, bar_addr[0]+0x5308);
writel(0x0, bar_addr[0]+0x5304);
writel(0x0, bar_addr[0]+0x5300);
writel(0x0, bar_addr[0]+0x52fc);
writel(0x0, bar_addr[0]+0x52f8);
writel(0x0, bar_addr[0]+0x52f4);
writel(0x0, bar_addr[0]+0x52f0);
writel(0x0, bar_addr[0]+0x52ec);
writel(0x0, bar_addr[0]+0x52e8);
writel(0x0, bar_addr[0]+0x52e4);
writel(0x0, bar_addr[0]+0x52e0);
writel(0x0, bar_addr[0]+0x52dc);
writel(0x0, bar_addr[0]+0x52d8);
writel(0x0, bar_addr[0]+0x52d4);
writel(0x0, bar_addr[0]+0x52d0);
writel(0x0, bar_addr[0]+0x52cc);
writel(0x0, bar_addr[0]+0x52c8);
writel(0x0, bar_addr[0]+0x52c4);
writel(0x0, bar_addr[0]+0x52c0);
writel(0x0, bar_addr[0]+0x52bc);
writel(0x0, bar_addr[0]+0x52b8);
writel(0x0, bar_addr[0]+0x52b4);
writel(0x0, bar_addr[0]+0x52b0);
writel(0x8, bar_addr[0]+0x52ac);
writel(0x0, bar_addr[0]+0x52a8);
writel(0x0, bar_addr[0]+0x52a4);
writel(0x0, bar_addr[0]+0x52a0);
writel(0x0, bar_addr[0]+0x529c);
writel(0x0, bar_addr[0]+0x5298);
writel(0x0, bar_addr[0]+0x5294);
writel(0x0, bar_addr[0]+0x5290);
writel(0x0, bar_addr[0]+0x528c);
writel(0x0, bar_addr[0]+0x5288);
writel(0x0, bar_addr[0]+0x5284);
writel(0x0, bar_addr[0]+0x5280);
writel(0x0, bar_addr[0]+0x527c);
writel(0x0, bar_addr[0]+0x5278);
writel(0x0, bar_addr[0]+0x5274);
writel(0x0, bar_addr[0]+0x5270);
writel(0x0, bar_addr[0]+0x526c);
writel(0x0, bar_addr[0]+0x5268);
writel(0x0, bar_addr[0]+0x5264);
writel(0x0, bar_addr[0]+0x5260);
writel(0x0, bar_addr[0]+0x525c);
writel(0x0, bar_addr[0]+0x5258);
writel(0x0, bar_addr[0]+0x5254);
writel(0x0, bar_addr[0]+0x5250);
writel(0x0, bar_addr[0]+0x524c);
writel(0x0, bar_addr[0]+0x5248);
writel(0x0, bar_addr[0]+0x5244);
writel(0x0, bar_addr[0]+0x5240);
writel(0x0, bar_addr[0]+0x523c);
writel(0x0, bar_addr[0]+0x5238);
writel(0x0, bar_addr[0]+0x5234);
writel(0x0, bar_addr[0]+0x5230);
writel(0x0, bar_addr[0]+0x522c);
writel(0x0, bar_addr[0]+0x5228);
writel(0x0, bar_addr[0]+0x5224);
writel(0x0, bar_addr[0]+0x5220);
writel(0x0, bar_addr[0]+0x521c);
writel(0x0, bar_addr[0]+0x5218);
writel(0x0, bar_addr[0]+0x5214);
writel(0x0, bar_addr[0]+0x5210);
writel(0x0, bar_addr[0]+0x520c);
writel(0x0, bar_addr[0]+0x5208);
writel(0x0, bar_addr[0]+0x5204);
writel(0x10000, bar_addr[0]+0x5200);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0x100);

writel(0x4048002, bar_addr[0]+0x100);
writel(0x0, bar_addr[0]+0x5474);
writel(0x0, bar_addr[0]+0x5470);
writel(0x0, bar_addr[0]+0x546c);
writel(0x0, bar_addr[0]+0x5468);
writel(0x0, bar_addr[0]+0x5464);
writel(0x0, bar_addr[0]+0x5460);
writel(0x0, bar_addr[0]+0x545c);
writel(0x0, bar_addr[0]+0x5458);
writel(0x0, bar_addr[0]+0x5454);
writel(0x0, bar_addr[0]+0x5450);
writel(0x0, bar_addr[0]+0x544c);
writel(0x0, bar_addr[0]+0x5448);
writel(0x0, bar_addr[0]+0x5444);
writel(0x0, bar_addr[0]+0x5440);
writel(0x0, bar_addr[0]+0x543c);
writel(0x0, bar_addr[0]+0x5438);
writel(0x0, bar_addr[0]+0x5434);
writel(0x0, bar_addr[0]+0x5430);
writel(0x0, bar_addr[0]+0x542c);
writel(0x0, bar_addr[0]+0x5428);
writel(0x0, bar_addr[0]+0x5424);
writel(0x0, bar_addr[0]+0x5420);
writel(0x0, bar_addr[0]+0x541c);
writel(0x0, bar_addr[0]+0x5418);
writel(0x0, bar_addr[0]+0x5414);
writel(0x0, bar_addr[0]+0x5410);
writel(0x0, bar_addr[0]+0x540c);
writel(0x0, bar_addr[0]+0x5408);
res = readl(bar_addr[0]+0x8);

writel(0x4008002, bar_addr[0]+0x100);
res = readl(bar_addr[0]+0x0);

writel(0x58140245, bar_addr[0]+0x0);
DMA_alloc(0x1c4d2802, 0x5a);
dma_writel(0x0, P2V(0x1dea2004));
dma_writel(0x1c4d2802, P2V(0x1dea2000));
dma_writel(0x0, P2V(0x1dea200c));
dma_writel(0x200005a, P2V(0x1dea2008));
dma_writel(0x8b00005a, P2V(0x1dea2008));
writel(0x1, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea200c));
DMA_free(0x1c4d2802, 0x5a);

dma_writel(0x0, P2V(0x1dea200c));
writel(0x400000, bar_addr[0]+0xd0);
DMA_alloc(0x1e4c7802, 0x56);
dma_writel(0x0, P2V(0x1dea2014));
dma_writel(0x1e4c7802, P2V(0x1dea2010));
dma_writel(0x0, P2V(0x1dea201c));
dma_writel(0x2000056, P2V(0x1dea2018));
dma_writel(0x8b000056, P2V(0x1dea2018));
writel(0x2, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea201c));
DMA_free(0x1e4c7802, 0x56);

dma_writel(0x0, P2V(0x1dea201c));
writel(0x400000, bar_addr[0]+0xd0);
DMA_alloc(0x1c4d2802, 0x5a);
dma_writel(0x0, P2V(0x1dea2024));
dma_writel(0x1c4d2802, P2V(0x1dea2020));
dma_writel(0x0, P2V(0x1dea202c));
dma_writel(0x200005a, P2V(0x1dea2028));
dma_writel(0x8b00005a, P2V(0x1dea2028));
writel(0x3, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea202c));
DMA_free(0x1c4d2802, 0x5a);

dma_writel(0x0, P2V(0x1dea202c));
writel(0x400000, bar_addr[0]+0xd0);
DMA_alloc(0x1c4d2802, 0x5a);
dma_writel(0x0, P2V(0x1dea2034));
dma_writel(0x1c4d2802, P2V(0x1dea2030));
dma_writel(0x0, P2V(0x1dea203c));
dma_writel(0x200005a, P2V(0x1dea2038));
dma_writel(0x8b00005a, P2V(0x1dea2038));
writel(0x4, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea203c));
DMA_free(0x1c4d2802, 0x5a);

dma_writel(0x0, P2V(0x1dea203c));
writel(0x400000, bar_addr[0]+0xd0);
DMA_alloc(0x1e4c7802, 0x46);
dma_writel(0x0, P2V(0x1dea2044));
dma_writel(0x1e4c7802, P2V(0x1dea2040));
dma_writel(0x0, P2V(0x1dea204c));
dma_writel(0x2000046, P2V(0x1dea2048));
dma_writel(0x8b000046, P2V(0x1dea2048));
writel(0x5, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea204c));

writel(0x1b2, bar_addr[0]+0xe8);
DMA_free(0x1e4c7802, 0x46);
dma_writel(0x0, P2V(0x1dea204c));
writel(0x400000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c008));
DMA_free(0x1dc23840, 0x5f2);
res = dma_readw(P2V(0x1de3c00c));
res = dma_readl(P2V(0x1de3c004));
res = dma_readw(P2V(0x1de3c00e));
res = dma_readl(P2V(0x1de3c018));
DMA_alloc(0x1c4df740, 0x5f2);

dma_writel(0x1c4df740, P2V(0x1de3cff0));
dma_writel(0x0, P2V(0x1de3cff4));
writel(0x100000, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0x4000);
res = readl(bar_addr[0]+0x4074);
res = readl(bar_addr[0]+0x4088);
res = readl(bar_addr[0]+0x408c);
res = readl(bar_addr[0]+0x4078);
res = readl(bar_addr[0]+0x407c);
res = readl(bar_addr[0]+0x40ac);
res = readl(bar_addr[0]+0x4010);
res = readl(bar_addr[0]+0x4048);
res = readl(bar_addr[0]+0x404c);
res = readl(bar_addr[0]+0x4050);
res = readl(bar_addr[0]+0x4054);
res = readl(bar_addr[0]+0x4080);
res = readl(bar_addr[0]+0x4090);
res = readl(bar_addr[0]+0x4094);
res = readl(bar_addr[0]+0x40a0);
res = readl(bar_addr[0]+0x40a4);
res = readl(bar_addr[0]+0x40f0);
res = readl(bar_addr[0]+0x40f4);
res = readl(bar_addr[0]+0x40d4);
res = readl(bar_addr[0]+0x4004);
res = readl(bar_addr[0]+0x400c);
res = readl(bar_addr[0]+0x403c);
res = readl(bar_addr[0]+0x40f8);
res = readl(bar_addr[0]+0x40fc);
res = readl(bar_addr[0]+0x40bc);
res = readl(bar_addr[0]+0x40b4);
res = readl(bar_addr[0]+0x40b8);

writel(0x100000, bar_addr[0]+0xc8);
writel(0x117, bar_addr[0]+0xe8);
writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);

writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8350000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x8210000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8300000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8310000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8310000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8310000, bar_addr[0]+0x20);
res = dma_readl(P2V(0x1de3c018));

writel(0x100000, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x82a0000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
DMA_alloc(0x1e4c7202, 0x56);
dma_writel(0x0, P2V(0x1dea2054));
dma_writel(0x1e4c7202, P2V(0x1dea2050));
dma_writel(0x0, P2V(0x1dea205c));
dma_writel(0x2000056, P2V(0x1dea2058));
dma_writel(0x8b000056, P2V(0x1dea2058));
writel(0x6, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea205c));
DMA_free(0x1e4c7202, 0x56);

dma_writel(0x0, P2V(0x1dea205c));
writel(0x400000, bar_addr[0]+0xd0);
DMA_alloc(0x1c4d2802, 0x5a);
dma_writel(0x0, P2V(0x1dea2064));
dma_writel(0x1c4d2802, P2V(0x1dea2060));
dma_writel(0x0, P2V(0x1dea206c));
dma_writel(0x200005a, P2V(0x1dea2068));
dma_writel(0x8b00005a, P2V(0x1dea2068));
writel(0x7, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea206c));
DMA_free(0x1c4d2802, 0x5a);

dma_writel(0x0, P2V(0x1dea206c));
writel(0x400000, bar_addr[0]+0xd0);
writel(0xcd, bar_addr[0]+0xe8);
res = dma_readl(P2V(0x1de3c018));
DMA_free(0x1dc23040, 0x5f2);
res = dma_readw(P2V(0x1de3c01c));
res = dma_readl(P2V(0x1de3c014));
res = dma_readw(P2V(0x1de3c01e));
res = dma_readl(P2V(0x1de3c028));
DMA_alloc(0x1dc23840, 0x5f2);

dma_writel(0x1dc23840, P2V(0x1de3c000));
dma_writel(0x0, P2V(0x1de3c004));
writel(0x0, bar_addr[0]+0x2818);
writel(0x100000, bar_addr[0]+0xd0);
DMA_alloc(0x1ddf3c02, 0x156);
dma_writel(0x0, P2V(0x1dea2074));
dma_writel(0x1ddf3c02, P2V(0x1dea2070));
dma_writel(0x0, P2V(0x1dea207c));
dma_writel(0x2000156, P2V(0x1dea2078));
dma_writel(0x8b000156, P2V(0x1dea2078));
writel(0x8, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea207c));

writel(0xc3, bar_addr[0]+0xe8);
DMA_free(0x1ddf3c02, 0x156);
dma_writel(0x0, P2V(0x1dea207c));
writel(0x400000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c028));
DMA_free(0x1dff8040, 0x5f2);
res = dma_readw(P2V(0x1de3c02c));
res = dma_readl(P2V(0x1de3c024));
res = dma_readw(P2V(0x1de3c02e));
res = dma_readl(P2V(0x1de3c038));
DMA_free(0x1dff8840, 0x5f2);
res = dma_readw(P2V(0x1de3c03c));
res = dma_readl(P2V(0x1de3c034));
res = dma_readw(P2V(0x1de3c03e));
res = dma_readl(P2V(0x1de3c048));
DMA_alloc(0x1dc23040, 0x5f2);

dma_writel(0x1dc23040, P2V(0x1de3c010));
dma_writel(0x0, P2V(0x1de3c014));
DMA_alloc(0x1dff8040, 0x5f2);
dma_writel(0x1dff8040, P2V(0x1de3c020));
dma_writel(0x0, P2V(0x1de3c024));
writel(0x100000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c048));

writel(0x100000, bar_addr[0]+0xd0);
DMA_alloc(0x1ddf3c02, 0x156);
dma_writel(0x0, P2V(0x1dea2084));
dma_writel(0x1ddf3c02, P2V(0x1dea2080));
dma_writel(0x0, P2V(0x1dea208c));
dma_writel(0x2000156, P2V(0x1dea2088));
dma_writel(0x8b000156, P2V(0x1dea2088));
writel(0x9, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea208c));
DMA_free(0x1ddf3c02, 0x156);

dma_writel(0x0, P2V(0x1dea208c));
writel(0x400000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c048));
DMA_free(0x1dff9040, 0x5f2);
res = dma_readw(P2V(0x1de3c04c));
res = dma_readl(P2V(0x1de3c044));
res = dma_readw(P2V(0x1de3c04e));
res = dma_readl(P2V(0x1de3c058));
DMA_alloc(0x1c4ded00, 0x5f2);

dma_writel(0x1c4ded00, P2V(0x1de3c030));
dma_writel(0x0, P2V(0x1de3c034));
writel(0x100000, bar_addr[0]+0xd0);
res = readl(bar_addr[0]+0x4000);
res = readl(bar_addr[0]+0x4074);
res = readl(bar_addr[0]+0x4088);
res = readl(bar_addr[0]+0x408c);
res = readl(bar_addr[0]+0x4078);
res = readl(bar_addr[0]+0x407c);
res = readl(bar_addr[0]+0x40ac);
res = readl(bar_addr[0]+0x4010);
res = readl(bar_addr[0]+0x4048);
res = readl(bar_addr[0]+0x404c);
res = readl(bar_addr[0]+0x4050);
res = readl(bar_addr[0]+0x4054);
res = readl(bar_addr[0]+0x4080);
res = readl(bar_addr[0]+0x4090);
res = readl(bar_addr[0]+0x4094);
res = readl(bar_addr[0]+0x40a0);
res = readl(bar_addr[0]+0x40a4);
res = readl(bar_addr[0]+0x40f0);
res = readl(bar_addr[0]+0x40f4);
res = readl(bar_addr[0]+0x40d4);
res = readl(bar_addr[0]+0x4004);
res = readl(bar_addr[0]+0x400c);
res = readl(bar_addr[0]+0x403c);
res = readl(bar_addr[0]+0x40f8);
res = readl(bar_addr[0]+0x40fc);
res = readl(bar_addr[0]+0x40bc);
res = readl(bar_addr[0]+0x40b4);
res = readl(bar_addr[0]+0x40b8);

writel(0x100000, bar_addr[0]+0xc8);
writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);

writel(0x80000008, bar_addr[0]+0x3820);
writel(0x80000020, bar_addr[0]+0x2820);
res = readl(bar_addr[0]+0x8);
res = readl(bar_addr[0]+0xf00);

writel(0x28, bar_addr[0]+0xf00);
res = readl(bar_addr[0]+0xf00);

writel(0x4360000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);

writel(0x8350000, bar_addr[0]+0x20);
res = readl(bar_addr[0]+0x20);
res = readl(bar_addr[0]+0xf00);

writel(0x8, bar_addr[0]+0xf00);
res = dma_readl(P2V(0x1de3c058));

writel(0x100000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c058));
DMA_free(0x1dff9840, 0x5f2);
res = dma_readw(P2V(0x1de3c05c));
res = dma_readl(P2V(0x1de3c054));
res = dma_readw(P2V(0x1de3c05e));
res = dma_readl(P2V(0x1de3c068));
DMA_alloc(0x1c4de440, 0x5f2);

dma_writel(0x1c4de440, P2V(0x1de3c040));
dma_writel(0x0, P2V(0x1de3c044));
DMA_alloc(0x1e430402, 0x2a);
dma_writel(0x0, P2V(0x1dea2094));
dma_writel(0x1e430402, P2V(0x1dea2090));
dma_writel(0x0, P2V(0x1dea209c));
dma_writel(0x200002a, P2V(0x1dea2098));
dma_writel(0x8b00002a, P2V(0x1dea2098));
writel(0xa, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea209c));
DMA_free(0x1e430402, 0x2a);

dma_writel(0x0, P2V(0x1dea209c));
writel(0x400000, bar_addr[0]+0xd0);
writel(0x100000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c068));
DMA_free(0x1dffa040, 0x5f2);
res = dma_readw(P2V(0x1de3c06c));
res = dma_readl(P2V(0x1de3c064));
res = dma_readw(P2V(0x1de3c06e));
res = dma_readl(P2V(0x1de3c078));
DMA_alloc(0x1dff9840, 0x5f2);

dma_writel(0x1dff9840, P2V(0x1de3c050));
dma_writel(0x0, P2V(0x1de3c054));
dma_writel(0x0, P2V(0x1dea20a0));
dma_writeb(0x22, P2V(0x1dea20a4));
dma_writel(0x0, P2V(0x1dea20ac));
dma_writeb(0x32, P2V(0x1dea20a5));
dma_writew(0x0, P2V(0x1dea20a6));
dma_writel(0x21000000, P2V(0x1dea20a8));
DMA_alloc(0x1c548106, 0x3a);
dma_writel(0x0, P2V(0x1dea20b4));
dma_writel(0x1c548106, P2V(0x1dea20b0));
dma_writel(0x200, P2V(0x1dea20bc));
dma_writel(0x2210003a, P2V(0x1dea20b8));
dma_writel(0xab10003a, P2V(0x1dea20b8));
writel(0xc, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea20bc));

dma_writel(0x0, P2V(0x1dea20ac));
DMA_free(0x1c548106, 0x3a);
dma_writel(0x0, P2V(0x1dea20bc));
writel(0x400000, bar_addr[0]+0xd0);
writel(0x100000, bar_addr[0]+0xd0);
res = dma_readl(P2V(0x1de3c078));
DMA_free(0x1dffa840, 0x5f2);
res = dma_readw(P2V(0x1de3c07c));
res = dma_readl(P2V(0x1de3c074));
res = dma_readw(P2V(0x1de3c07e));
res = dma_readl(P2V(0x1de3c088));
DMA_free(0x1dffb040, 0x5f2);
res = dma_readw(P2V(0x1de3c08c));
res = dma_readl(P2V(0x1de3c084));
res = dma_readw(P2V(0x1de3c08e));
res = dma_readl(P2V(0x1de3c098));
DMA_alloc(0x1dffa040, 0x5f2);

dma_writel(0x1dffa040, P2V(0x1de3c060));
dma_writel(0x0, P2V(0x1de3c064));
DMA_alloc(0x1dffa840, 0x5f2);
dma_writel(0x1dffa840, P2V(0x1de3c070));
dma_writel(0x0, P2V(0x1de3c074));
dma_writel(0x0, P2V(0x1dea20c0));
dma_writeb(0x22, P2V(0x1dea20c4));
dma_writel(0x0, P2V(0x1dea20cc));
dma_writeb(0x32, P2V(0x1dea20c5));
dma_writew(0x0, P2V(0x1dea20c6));
dma_writel(0x21000000, P2V(0x1dea20c8));
DMA_alloc(0x1c54810a, 0x36);
dma_writel(0x0, P2V(0x1dea20d4));
dma_writel(0x1c54810a, P2V(0x1dea20d0));
dma_writel(0x200, P2V(0x1dea20dc));
dma_writel(0x22100036, P2V(0x1dea20d8));
dma_writel(0xab100036, P2V(0x1dea20d8));
writel(0xe, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea20dc));

dma_writel(0x0, P2V(0x1dea20cc));
DMA_free(0x1c54810a, 0x36);
dma_writel(0x0, P2V(0x1dea20dc));
writel(0x400000, bar_addr[0]+0xd0);
writel(0x100000, bar_addr[0]+0xd0);
dma_writel(0x0, P2V(0x1dea20e0));
dma_writeb(0x22, P2V(0x1dea20e4));
dma_writel(0x0, P2V(0x1dea20ec));
dma_writeb(0x32, P2V(0x1dea20e5));
dma_writew(0x0, P2V(0x1dea20e6));
dma_writel(0x21000000, P2V(0x1dea20e8));
DMA_alloc(0x1c54810a, 0x36);
DMA_alloc(0x1c540000, 0x27);
dma_writel(0x0, P2V(0x1dea20f4));
dma_writel(0x1c54810a, P2V(0x1dea20f0));
dma_writel(0x200, P2V(0x1dea20fc));
dma_writel(0x22100036, P2V(0x1dea20f8));
dma_writel(0x0, P2V(0x1dea2104));
dma_writel(0x1c540000, P2V(0x1dea2100));
dma_writel(0x200, P2V(0x1dea210c));
dma_writel(0x22100027, P2V(0x1dea2108));
dma_writel(0xab100027, P2V(0x1dea2108));
writel(0x11, bar_addr[0]+0x3818);
res = dma_readl(P2V(0x1dea210c));

dma_writel(0x0, P2V(0x1dea20ec));
DMA_free(0x1c54810a, 0x36);
dma_writel(0x0, P2V(0x1dea20fc));
DMA_free(0x1c540000, 0x27);
dma_writel(0x0, P2V(0x1dea210c));
res = readw(wrong)
